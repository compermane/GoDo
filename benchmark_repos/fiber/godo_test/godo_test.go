package test

import (
	"flag"
	"os"
	"testing"

	"github.com/compermane/ic-go/pkg/domain/executor"
	"github.com/gofiber/fiber/v3"
	"github.com/gofiber/fiber/v3/addon/retry"
	"github.com/gofiber/fiber/v3/binder"
	"github.com/gofiber/fiber/v3/client"
	"github.com/gofiber/fiber/v3/internal/memory"
	"github.com/gofiber/fiber/v3/internal/tlstest"
	"github.com/gofiber/fiber/v3/log"
	"github.com/gofiber/fiber/v3/middleware/adaptor"
	"github.com/gofiber/fiber/v3/middleware/basicauth"
	"github.com/gofiber/fiber/v3/middleware/cache"
	"github.com/gofiber/fiber/v3/middleware/compress"
	"github.com/gofiber/fiber/v3/middleware/cors"
	"github.com/gofiber/fiber/v3/middleware/csrf"
	"github.com/gofiber/fiber/v3/middleware/earlydata"
	"github.com/gofiber/fiber/v3/middleware/encryptcookie"
	"github.com/gofiber/fiber/v3/middleware/envvar"
	"github.com/gofiber/fiber/v3/middleware/etag"
	"github.com/gofiber/fiber/v3/middleware/expvar"
	"github.com/gofiber/fiber/v3/middleware/favicon"
	"github.com/gofiber/fiber/v3/middleware/healthcheck"
	"github.com/gofiber/fiber/v3/middleware/helmet"
	"github.com/gofiber/fiber/v3/middleware/idempotency"
	"github.com/gofiber/fiber/v3/middleware/keyauth"
	"github.com/gofiber/fiber/v3/middleware/limiter"
	"github.com/gofiber/fiber/v3/middleware/logger"
	"github.com/gofiber/fiber/v3/middleware/pprof"
	"github.com/gofiber/fiber/v3/middleware/proxy"
	"github.com/gofiber/fiber/v3/middleware/redirect"
	"github.com/gofiber/fiber/v3/middleware/requestid"
	"github.com/gofiber/fiber/v3/middleware/rewrite"
	"github.com/gofiber/fiber/v3/middleware/session"
	"github.com/gofiber/fiber/v3/middleware/skip"
	"github.com/gofiber/fiber/v3/middleware/timeout"
)
var iteration int

func TestMain(m *testing.M) {
	flag.IntVar(&iteration, "iteration", 1000, "Iteração do algoritmo (benchmarking)",)
	flag.Parse()

	code := m.Run()
	os.Exit(code)
}

func TestGodo(t *testing.T) {
	funcs := []any{
		retry.NewExponentialBackoff,
		(*retry.ExponentialBackoff).Retry,
		fiber.DefaultErrorHandler,
		fiber.New,
		(*fiber.App).NewCtxFunc,
		(*fiber.App).RegisterCustomConstraint,
		(*fiber.App).RegisterCustomBinder,
		(*fiber.App).SetTLSHandler,
		(*fiber.App).Name,
		(*fiber.App).GetRoute,
		(*fiber.App).GetRoutes,
		(*fiber.App).Use,
		(*fiber.App).Get,
		(*fiber.App).Head,
		(*fiber.App).Post,
		(*fiber.App).Put,
		(*fiber.App).Delete,
		(*fiber.App).Connect,
		(*fiber.App).Options,
		(*fiber.App).Trace,
		(*fiber.App).Patch,
		(*fiber.App).Add,
		(*fiber.App).All,
		(*fiber.App).Group,
		(*fiber.App).Route,
		(*fiber.Error).Error,
		fiber.NewError,
		(*fiber.App).Config,
		(*fiber.App).Handler,
		(*fiber.App).Stack,
		(*fiber.App).HandlersCount,
		(*fiber.App).Shutdown,
		(*fiber.App).ShutdownWithTimeout,
		(*fiber.App).ShutdownWithContext,
		(*fiber.App).Server,
		(*fiber.App).Hooks,
		(*fiber.App).ErrorHandler,
		(*fiber.Bind).WithoutAutoHandling,
		(*fiber.Bind).WithAutoHandling,
		(*fiber.Bind).Custom,
		(*fiber.Bind).Header,
		(*fiber.Bind).RespHeader,
		(*fiber.Bind).Cookie,
		(*fiber.Bind).Query,
		(*fiber.Bind).JSON,
		(*fiber.Bind).CBOR,
		(*fiber.Bind).XML,
		(*fiber.Bind).Form,
		(*fiber.Bind).URI,
		(*fiber.Bind).Body,
		(*binder.CBORBinding).Name,
		(*binder.CBORBinding).Bind,
		(*binder.CBORBinding).Reset,
		(*binder.CookieBinding).Name,
		(*binder.CookieBinding).Bind,
		(*binder.CookieBinding).Reset,
		(*binder.FormBinding).Name,
		(*binder.FormBinding).Bind,
		(*binder.FormBinding).Reset,
		(*binder.HeaderBinding).Name,
		(*binder.HeaderBinding).Bind,
		(*binder.HeaderBinding).Reset,
		(*binder.JSONBinding).Name,
		(*binder.JSONBinding).Bind,
		(*binder.JSONBinding).Reset,
		binder.SetParserDecoder,
		binder.FilterFlags,
		(*binder.QueryBinding).Name,
		(*binder.QueryBinding).Bind,
		(*binder.QueryBinding).Reset,
		(*binder.RespHeaderBinding).Name,
		(*binder.RespHeaderBinding).Bind,
		(*binder.RespHeaderBinding).Reset,
		(*binder.URIBinding).Name,
		(*binder.URIBinding).Bind,
		(*binder.URIBinding).Reset,
		(*binder.XMLBinding).Name,
		(*binder.XMLBinding).Bind,
		(*binder.XMLBinding).Reset,
		(*client.Client).R,
		(*client.Client).RequestHook,
		(*client.Client).AddRequestHook,
		(*client.Client).ResponseHook,
		(*client.Client).AddResponseHook,
		(*client.Client).JSONMarshal,
		(*client.Client).SetJSONMarshal,
		(*client.Client).JSONUnmarshal,
		(*client.Client).SetJSONUnmarshal,
		(*client.Client).XMLMarshal,
		(*client.Client).SetXMLMarshal,
		(*client.Client).XMLUnmarshal,
		(*client.Client).SetXMLUnmarshal,
		(*client.Client).CBORMarshal,
		(*client.Client).SetCBORMarshal,
		(*client.Client).CBORUnmarshal,
		(*client.Client).SetCBORUnmarshal,
		(*client.Client).TLSConfig,
		(*client.Client).SetTLSConfig,
		(*client.Client).SetCertificates,
		(*client.Client).SetRootCertificate,
		(*client.Client).SetRootCertificateFromString,
		(*client.Client).SetProxyURL,
		(*client.Client).RetryConfig,
		(*client.Client).SetRetryConfig,
		(*client.Client).BaseURL,
		(*client.Client).SetBaseURL,
		(*client.Client).Header,
		(*client.Client).AddHeader,
		(*client.Client).SetHeader,
		(*client.Client).AddHeaders,
		(*client.Client).SetHeaders,
		(*client.Client).Param,
		(*client.Client).AddParam,
		(*client.Client).SetParam,
		(*client.Client).AddParams,
		(*client.Client).SetParams,
		(*client.Client).SetParamsWithStruct,
		(*client.Client).DelParams,
		(*client.Client).SetUserAgent,
		(*client.Client).SetReferer,
		(*client.Client).PathParam,
		(*client.Client).SetPathParam,
		(*client.Client).SetPathParams,
		(*client.Client).SetPathParamsWithStruct,
		(*client.Client).DelPathParams,
		(*client.Client).Cookie,
		(*client.Client).SetCookie,
		(*client.Client).SetCookies,
		(*client.Client).SetCookiesWithStruct,
		(*client.Client).DelCookies,
		(*client.Client).SetTimeout,
		(*client.Client).Debug,
		(*client.Client).DisableDebug,
		(*client.Client).SetCookieJar,
		(*client.Client).Get,
		(*client.Client).Post,
		(*client.Client).Head,
		(*client.Client).Put,
		(*client.Client).Delete,
		(*client.Client).Options,
		(*client.Client).Patch,
		(*client.Client).Custom,
		(*client.Client).SetDial,
		(*client.Client).SetLogger,
		(*client.Client).Logger,
		(*client.Client).Reset,
		client.New,
		client.NewWithClient,
		client.C,
		client.Replace,
		client.Get,
		client.Post,
		client.Head,
		client.Put,
		client.Delete,
		client.Options,
		client.Patch,
		client.AcquireCookieJar,
		client.ReleaseCookieJar,
		(*client.CookieJar).Get,
		(*client.CookieJar).Set,
		(*client.CookieJar).SetByHost,
		(*client.CookieJar).SetKeyValue,
		(*client.CookieJar).SetKeyValueBytes,
		(*client.CookieJar).Release,
		(*client.Request).Method,
		(*client.Request).SetMethod,
		(*client.Request).URL,
		(*client.Request).SetURL,
		(*client.Request).Client,
		(*client.Request).SetClient,
		(*client.Request).Context,
		(*client.Request).SetContext,
		(*client.Request).Header,
		(*client.Request).Headers,
		(*client.Request).AddHeader,
		(*client.Request).SetHeader,
		(*client.Request).AddHeaders,
		(*client.Request).SetHeaders,
		(*client.Request).Param,
		(*client.Request).Params,
		(*client.Request).AddParam,
		(*client.Request).SetParam,
		(*client.Request).AddParams,
		(*client.Request).SetParams,
		(*client.Request).SetParamsWithStruct,
		(*client.Request).DelParams,
		(*client.Request).UserAgent,
		(*client.Request).SetUserAgent,
		(*client.Request).Boundary,
		(*client.Request).SetBoundary,
		(*client.Request).Referer,
		(*client.Request).SetReferer,
		(*client.Request).Cookie,
		(*client.Request).Cookies,
		(*client.Request).SetCookie,
		(*client.Request).SetCookies,
		(*client.Request).SetCookiesWithStruct,
		(*client.Request).DelCookies,
		(*client.Request).PathParam,
		(*client.Request).PathParams,
		(*client.Request).SetPathParam,
		(*client.Request).SetPathParams,
		(*client.Request).SetPathParamsWithStruct,
		(*client.Request).DelPathParams,
		(*client.Request).ResetPathParams,
		(*client.Request).SetJSON,
		(*client.Request).SetXML,
		(*client.Request).SetCBOR,
		(*client.Request).SetRawBody,
		(*client.Request).FormData,
		(*client.Request).AllFormData,
		(*client.Request).AddFormData,
		(*client.Request).SetFormData,
		(*client.Request).AddFormDataWithMap,
		(*client.Request).SetFormDataWithMap,
		(*client.Request).SetFormDataWithStruct,
		(*client.Request).DelFormData,
		(*client.Request).File,
		(*client.Request).Files,
		(*client.Request).FileByPath,
		(*client.Request).AddFile,
		(*client.Request).AddFileWithReader,
		(*client.Request).AddFiles,
		(*client.Request).Timeout,
		(*client.Request).SetTimeout,
		(*client.Request).MaxRedirects,
		(*client.Request).SetMaxRedirects,
		(*client.Request).Get,
		(*client.Request).Post,
		(*client.Request).Head,
		(*client.Request).Put,
		(*client.Request).Delete,
		(*client.Request).Options,
		(*client.Request).Patch,
		(*client.Request).Custom,
		(*client.Request).Send,
		(*client.Request).Reset,
		(*client.Header).PeekMultiple,
		(*client.Header).AddHeaders,
		(*client.Header).SetHeaders,
		(*client.QueryParam).Keys,
		(*client.QueryParam).AddParams,
		(*client.QueryParam).SetParams,
		(*client.QueryParam).SetParamsWithStruct,
		(client.Cookie).Add,
		(client.Cookie).Del,
		(client.Cookie).SetCookie,
		(client.Cookie).SetCookies,
		(client.Cookie).SetCookiesWithStruct,
		(client.Cookie).DelCookies,
		(client.Cookie).VisitAll,
		(client.Cookie).Reset,
		(client.PathParam).Add,
		(client.PathParam).Del,
		(client.PathParam).SetParam,
		(client.PathParam).SetParams,
		(client.PathParam).SetParamsWithStruct,
		(client.PathParam).DelParams,
		(client.PathParam).VisitAll,
		(client.PathParam).Reset,
		(*client.FormData).Keys,
		(*client.FormData).Add,
		(*client.FormData).Set,
		(*client.FormData).AddWithMap,
		(*client.FormData).SetWithMap,
		(*client.FormData).SetWithStruct,
		(*client.FormData).DelData,
		(*client.FormData).Reset,
		(*client.File).SetName,
		(*client.File).SetFieldName,
		(*client.File).SetPath,
		(*client.File).SetReader,
		(*client.File).Reset,
		client.AcquireRequest,
		client.ReleaseRequest,
		client.SetFileName,
		client.SetFileFieldName,
		client.SetFilePath,
		client.SetFileReader,
		client.AcquireFile,
		client.ReleaseFile,
		client.SetValWithStruct,
		(*client.Response).Status,
		(*client.Response).StatusCode,
		(*client.Response).Protocol,
		(*client.Response).Header,
		(*client.Response).Headers,
		(*client.Response).Cookies,
		(*client.Response).Body,
		(*client.Response).String,
		(*client.Response).JSON,
		(*client.Response).CBOR,
		(*client.Response).XML,
		(*client.Response).Save,
		(*client.Response).Reset,
		(*client.Response).Close,
		client.AcquireResponse,
		client.ReleaseResponse,
		(*fiber.TLSHandler).GetClientInfo,
		(*fiber.DefaultCtx).Accepts,
		(*fiber.DefaultCtx).AcceptsCharsets,
		(*fiber.DefaultCtx).AcceptsEncodings,
		(*fiber.DefaultCtx).AcceptsLanguages,
		(*fiber.DefaultCtx).App,
		(*fiber.DefaultCtx).Append,
		(*fiber.DefaultCtx).Attachment,
		(*fiber.DefaultCtx).BaseURL,
		(*fiber.DefaultCtx).BodyRaw,
		(*fiber.DefaultCtx).Body,
		(*fiber.DefaultCtx).ClearCookie,
		(*fiber.DefaultCtx).RequestCtx,
		(*fiber.DefaultCtx).Context,
		(*fiber.DefaultCtx).SetContext,
		(*fiber.DefaultCtx).Cookie,
		(*fiber.DefaultCtx).Cookies,
		(*fiber.DefaultCtx).Download,
		(*fiber.DefaultCtx).Request,
		(*fiber.DefaultCtx).Response,
		(*fiber.DefaultCtx).Format,
		(*fiber.DefaultCtx).AutoFormat,
		(*fiber.DefaultCtx).FormFile,
		(*fiber.DefaultCtx).FormValue,
		(*fiber.DefaultCtx).Fresh,
		(*fiber.DefaultCtx).Get,
		(*fiber.DefaultCtx).GetRespHeader,
		(*fiber.DefaultCtx).GetRespHeaders,
		(*fiber.DefaultCtx).GetReqHeaders,
		(*fiber.DefaultCtx).Host,
		(*fiber.DefaultCtx).Hostname,
		(*fiber.DefaultCtx).Port,
		(*fiber.DefaultCtx).IP,
		(*fiber.DefaultCtx).IPs,
		(*fiber.DefaultCtx).Is,
		(*fiber.DefaultCtx).JSON,
		(*fiber.DefaultCtx).CBOR,
		(*fiber.DefaultCtx).JSONP,
		(*fiber.DefaultCtx).XML,
		(*fiber.DefaultCtx).Links,
		(*fiber.DefaultCtx).Locals,
		(*fiber.DefaultCtx).Location,
		(*fiber.DefaultCtx).Method,
		(*fiber.DefaultCtx).MultipartForm,
		(*fiber.DefaultCtx).ClientHelloInfo,
		(*fiber.DefaultCtx).Next,
		(*fiber.DefaultCtx).RestartRouting,
		(*fiber.DefaultCtx).OriginalURL,
		(*fiber.DefaultCtx).Params,
		(*fiber.DefaultCtx).Path,
		(*fiber.DefaultCtx).Scheme,
		(*fiber.DefaultCtx).Protocol,
		(*fiber.DefaultCtx).Query,
		(*fiber.DefaultCtx).Queries,
		(*fiber.DefaultCtx).Range,
		(*fiber.DefaultCtx).Redirect,
		(*fiber.DefaultCtx).ViewBind,
		(*fiber.DefaultCtx).GetRouteURL,
		(*fiber.DefaultCtx).Render,
		(*fiber.DefaultCtx).Route,
		(*fiber.DefaultCtx).SaveFile,
		(*fiber.DefaultCtx).SaveFileToStorage,
		(*fiber.DefaultCtx).Secure,
		(*fiber.DefaultCtx).Send,
		(*fiber.DefaultCtx).SendFile,
		(*fiber.DefaultCtx).SendStatus,
		(*fiber.DefaultCtx).SendString,
		(*fiber.DefaultCtx).SendStream,
		(*fiber.DefaultCtx).SendStreamWriter,
		(*fiber.DefaultCtx).Set,
		(*fiber.DefaultCtx).Subdomains,
		(*fiber.DefaultCtx).Stale,
		(*fiber.DefaultCtx).Status,
		(*fiber.DefaultCtx).String,
		(*fiber.DefaultCtx).Type,
		(*fiber.DefaultCtx).Vary,
		(*fiber.DefaultCtx).Write,
		(*fiber.DefaultCtx).Writef,
		(*fiber.DefaultCtx).WriteString,
		(*fiber.DefaultCtx).XHR,
		(*fiber.DefaultCtx).IsProxyTrusted,
		(*fiber.DefaultCtx).IsFromLocal,
		(*fiber.DefaultCtx).Bind,
		(*fiber.DefaultCtx).Reset,
		(*fiber.DefaultCtx).Drop,
		(*fiber.DefaultCtx).End,
		fiber.NewDefaultCtx,
		(*fiber.App).AcquireCtx,
		(*fiber.App).ReleaseCtx,
		(*fiber.Group).Name,
		(*fiber.Group).Use,
		(*fiber.Group).Get,
		(*fiber.Group).Head,
		(*fiber.Group).Post,
		(*fiber.Group).Put,
		(*fiber.Group).Delete,
		(*fiber.Group).Connect,
		(*fiber.Group).Options,
		(*fiber.Group).Trace,
		(*fiber.Group).Patch,
		(*fiber.Group).Add,
		(*fiber.Group).All,
		(*fiber.Group).Group,
		(*fiber.Group).Route,
		fiber.IsMethodSafe,
		fiber.IsMethodIdempotent,
		fiber.IndexRune,
		(*fiber.Hooks).OnRoute,
		(*fiber.Hooks).OnName,
		(*fiber.Hooks).OnGroup,
		(*fiber.Hooks).OnGroupName,
		(*fiber.Hooks).OnListen,
		(*fiber.Hooks).OnShutdown,
		(*fiber.Hooks).OnFork,
		(*fiber.Hooks).OnMount,
		memory.New,
		(*memory.Storage).Get,
		(*memory.Storage).Set,
		(*memory.Storage).Delete,
		(*memory.Storage).Reset,
		memory.New,
		(*memory.Storage).Get,
		(*memory.Storage).Set,
		(*memory.Storage).Delete,
		(*memory.Storage).Reset,
		tlstest.GetTLSConfigs,
		(*fiber.App).Listen,
		(*fiber.App).Listener,
		log.DefaultLogger,
		log.Error,
		log.Warn,
		log.Info,
		log.Debug,
		log.Trace,
		log.Panic,
		log.Errorf,
		log.Warnf,
		log.Infof,
		log.Debugf,
		log.Tracef,
		log.Panicf,
		log.Tracew,
		log.Debugw,
		log.Infow,
		log.Warnw,
		log.Errorw,
		log.Panicw,
		log.WithContext,
		log.SetLogger,
		log.SetOutput,
		log.SetLevel,
		adaptor.HTTPHandlerFunc,
		adaptor.HTTPHandler,
		adaptor.ConvertRequest,
		adaptor.CopyContextToFiberContext,
		adaptor.HTTPMiddleware,
		adaptor.FiberHandler,
		adaptor.FiberHandlerFunc,
		adaptor.FiberApp,
		basicauth.New,
		basicauth.UsernameFromContext,
		basicauth.PasswordFromContext,
		cache.New,
		compress.New,
		cors.New,
		csrf.New,
		csrf.TokenFromContext,
		csrf.HandlerFromContext,
		(*csrf.Handler).DeleteToken,
		csrf.FromParam,
		csrf.FromForm,
		csrf.FromCookie,
		csrf.FromHeader,
		csrf.FromQuery,
		earlydata.IsEarly,
		earlydata.New,
		encryptcookie.New,
		encryptcookie.EncryptCookie,
		encryptcookie.DecryptCookie,
		encryptcookie.GenerateKey,
		envvar.New,
		etag.New,
		expvar.New,
		favicon.New,
		healthcheck.NewHealthChecker,
		helmet.New,
		idempotency.IsFromCache,
		idempotency.WasPutToCache,
		idempotency.New,
		(*idempotency.MemoryLock).Lock,
		(*idempotency.MemoryLock).Unlock,
		idempotency.NewMemoryLock,
		keyauth.New,
		keyauth.TokenFromContext,
		keyauth.MultipleKeySourceLookup,
		keyauth.DefaultKeyLookup,
		keyauth.KeyFromHeader,
		keyauth.KeyFromQuery,
		keyauth.KeyFromForm,
		keyauth.KeyFromParam,
		keyauth.KeyFromCookie,
		limiter.New,
		(limiter.FixedWindow).New,
		(limiter.SlidingWindow).New,
		logger.New,
		logger.LoggerToWriter,
		pprof.New,
		proxy.Balancer,
		proxy.WithClient,
		proxy.Forward,
		proxy.Do,
		proxy.DoRedirects,
		proxy.DoDeadline,
		proxy.DoTimeout,
		proxy.DomainForward,
		proxy.BalancerForward,
		redirect.New,
		requestid.New,
		requestid.FromContext,
		rewrite.New,
		session.DefaultErrorHandler,
		session.New,
		session.NewWithStore,
		session.FromContext,
		(*session.Middleware).Set,
		(*session.Middleware).Get,
		(*session.Middleware).Delete,
		(*session.Middleware).Destroy,
		(*session.Middleware).Fresh,
		(*session.Middleware).ID,
		(*session.Middleware).Reset,
		(*session.Middleware).Store,
		(*session.Session).Release,
		(*session.Session).Fresh,
		(*session.Session).ID,
		(*session.Session).Get,
		(*session.Session).Set,
		(*session.Session).Delete,
		(*session.Session).Destroy,
		(*session.Session).Regenerate,
		(*session.Session).Reset,
		(*session.Session).Save,
		(*session.Session).Keys,
		(*session.Session).SetIdleTimeout,
		session.NewStore,
		(*session.Store).RegisterType,
		(*session.Store).Get,
		(*session.Store).Reset,
		(*session.Store).Delete,
		(*session.Store).GetByID,
		skip.New,
		timeout.New,
		(*fiber.App).MountPath,
		fiber.RoutePatternMatch,
		fiber.GetTrimmedParam,
		fiber.RemoveEscapeChar,
		(*fiber.Constraint).CheckConstraint,
		fiber.IsChild,
		fiber.AcquireRedirect,
		fiber.ReleaseRedirect,
		(*fiber.Redirect).Status,
		(*fiber.Redirect).With,
		(*fiber.Redirect).WithInput,
		(*fiber.Redirect).Messages,
		(*fiber.Redirect).Message,
		(*fiber.Redirect).OldInputs,
		(*fiber.Redirect).OldInput,
		(*fiber.Redirect).To,
		(*fiber.Redirect).Route,
		(*fiber.Redirect).Back,
		(*fiber.Registering).All,
		(*fiber.Registering).Get,
		(*fiber.Registering).Head,
		(*fiber.Registering).Post,
		(*fiber.Registering).Put,
		(*fiber.Registering).Delete,
		(*fiber.Registering).Connect,
		(*fiber.Registering).Options,
		(*fiber.Registering).Trace,
		(*fiber.Registering).Patch,
		(*fiber.Registering).Add,
		(*fiber.Registering).Route,
		(*fiber.App).RebuildTree,
	}

	// rcv := receiver.GetReceiver(cobra.Command{})
	// rcv.SetReceiverValues()

	executor.ExecuteFuncs(funcs, nil, "feedback_directed", 0, 15, 10, executor.DebugOpts{Dump: true, Debug: false, UseSequenceHashMap: true, Iteration: iteration})
}