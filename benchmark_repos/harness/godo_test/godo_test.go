package test

import (
	"flag"
	"os"
	"testing"

	"github.com/compermane/ic-go/pkg/domain/executor"
	"github.com/harness/gitness/app/api/auth"
	"github.com/harness/gitness/app/api/controller"
	"github.com/harness/gitness/app/api/controller/aiagent"
	"github.com/harness/gitness/app/api/controller/capabilities"
	"github.com/harness/gitness/app/api/controller/check"
	"github.com/harness/gitness/app/api/controller/connector"
	"github.com/harness/gitness/app/api/controller/execution"
	"github.com/harness/gitness/app/api/controller/githook"
	"github.com/harness/gitness/app/api/controller/gitspace"
	"github.com/harness/gitness/app/api/controller/infraprovider"
	"github.com/harness/gitness/app/api/controller/keywordsearch"
	"github.com/harness/gitness/app/api/controller/limiter"
	"github.com/harness/gitness/app/api/controller/logs"
	"github.com/harness/gitness/app/api/controller/migrate"
	"github.com/harness/gitness/app/api/controller/pipeline"
	"github.com/harness/gitness/app/api/controller/plugin"
	"github.com/harness/gitness/app/api/controller/principal"
	"github.com/harness/gitness/app/api/controller/pullreq"
	"github.com/harness/gitness/app/api/controller/repo"
	"github.com/harness/gitness/app/api/controller/reposettings"
	"github.com/harness/gitness/app/api/controller/secret"
	"github.com/harness/gitness/app/api/controller/service"
	"github.com/harness/gitness/app/api/controller/serviceaccount"
	"github.com/harness/gitness/app/api/controller/space"
	"github.com/harness/gitness/app/api/controller/system"
	"github.com/harness/gitness/app/api/controller/template"
	"github.com/harness/gitness/app/api/controller/trigger"
	"github.com/harness/gitness/app/api/controller/upload"
	"github.com/harness/gitness/app/api/controller/user"
	"github.com/harness/gitness/app/api/controller/usergroup"
	"github.com/harness/gitness/app/api/controller/webhook"
	"github.com/harness/gitness/app/api/handler/account"
	"github.com/harness/gitness/app/api/handler/users"
	"github.com/harness/gitness/app/api/middleware/address"
	"github.com/harness/gitness/app/api/middleware/authn"
	"github.com/harness/gitness/app/api/middleware/authz"
	"github.com/harness/gitness/app/api/middleware/encode"
	"github.com/harness/gitness/app/api/middleware/goget"
	"github.com/harness/gitness/app/api/middleware/logging"
	"github.com/harness/gitness/app/api/middleware/nocache"
	"github.com/harness/gitness/app/api/middleware/web"
	"github.com/harness/gitness/app/api/openapi"
	"github.com/harness/gitness/app/api/render"
	"github.com/harness/gitness/app/api/render/platform"
	"github.com/harness/gitness/app/api/request"
	"github.com/harness/gitness/app/api/usererror"
	"github.com/harness/gitness/app/bootstrap"
	"github.com/harness/gitness/app/connector/scm"
	"github.com/harness/gitness/app/cron"
	events "github.com/harness/gitness/app/events/git"
	"github.com/harness/gitness/app/gitspace/infrastructure"
	"github.com/harness/gitness/app/gitspace/logutil"
	"github.com/harness/gitness/app/gitspace/orchestrator"
	"github.com/harness/gitness/app/gitspace/orchestrator/container"
	"github.com/harness/gitness/app/gitspace/orchestrator/devcontainer"
	"github.com/harness/gitness/app/gitspace/orchestrator/ide"
	"github.com/harness/gitness/app/gitspace/orchestrator/runarg"
	"github.com/harness/gitness/app/gitspace/orchestrator/utils"
	"github.com/harness/gitness/app/gitspace/platformconnector"
	"github.com/harness/gitness/app/gitspace/types"
	"github.com/harness/gitness/app/jwt"
	"github.com/harness/gitness/app/paths"
	"github.com/harness/gitness/app/pipeline/canceler"
	"github.com/harness/gitness/app/pipeline/checks"
	"github.com/harness/gitness/app/pipeline/commit"
	"github.com/harness/gitness/app/pipeline/converter"
	"github.com/harness/gitness/app/pipeline/converter/jsonnet"
	"github.com/harness/gitness/app/pipeline/converter/starlark"
	"github.com/harness/gitness/app/pipeline/file"
	"github.com/harness/gitness/app/pipeline/logger"
	"github.com/harness/gitness/app/pipeline/manager"
	"github.com/harness/gitness/app/pipeline/resolver"
	"github.com/harness/gitness/app/pipeline/runner"
	"github.com/harness/gitness/app/pipeline/scheduler"
	"github.com/harness/gitness/app/pipeline/triggerer"
	"github.com/harness/gitness/app/pipeline/triggerer/dag"
	"github.com/harness/gitness/app/router"
	"github.com/harness/gitness/app/server"
	"github.com/harness/gitness/app/services"
	"github.com/harness/gitness/app/services/cleanup"
	"github.com/harness/gitness/app/services/codecomments"
	"github.com/harness/gitness/app/services/codeowners"
	"github.com/harness/gitness/app/services/exporter"
	"github.com/harness/gitness/app/services/gitspaceevent"
	"github.com/harness/gitness/app/services/gitspaceinfraevent"
	"github.com/harness/gitness/app/services/importer"
	"github.com/harness/gitness/app/services/instrument"
	"github.com/harness/gitness/app/services/label"
	"github.com/harness/gitness/app/services/locker"
	"github.com/harness/gitness/app/services/messaging"
	"github.com/harness/gitness/app/services/metric"
	"github.com/harness/gitness/app/services/notification"
	"github.com/harness/gitness/app/services/notification/mailer"
	"github.com/harness/gitness/app/services/protection"
	"github.com/harness/gitness/app/services/publicaccess"
	"github.com/harness/gitness/app/services/publickey"
	"github.com/harness/gitness/app/services/refcache"
	"github.com/harness/gitness/app/services/rules"
	"github.com/harness/gitness/app/services/settings"
	"github.com/harness/gitness/app/services/usage"
	"github.com/harness/gitness/app/sse"
	"github.com/harness/gitness/app/store"
	"github.com/harness/gitness/app/store/cache"
	"github.com/harness/gitness/app/store/database"
	"github.com/harness/gitness/app/token"
	"github.com/harness/gitness/app/url"
	"github.com/harness/gitness/audit"
	"github.com/harness/gitness/blob"
	"github.com/harness/gitness/cli"
	"github.com/harness/gitness/cli/operations/hooks"
	"github.com/harness/gitness/cli/operations/swagger"
	"github.com/harness/gitness/cli/session"
	"github.com/harness/gitness/cli/textui"
	"github.com/harness/gitness/client"
	"github.com/harness/gitness/contextutil"
	"github.com/harness/gitness/crypto"
	"github.com/harness/gitness/encrypt"
	"github.com/harness/gitness/errors"
	"github.com/harness/gitness/genai"
	"github.com/harness/gitness/git"
	"github.com/harness/gitness/git/api/foreachref"
	"github.com/harness/gitness/git/command"
	"github.com/harness/gitness/git/diff"
	"github.com/harness/gitness/git/enum"
	"github.com/harness/gitness/git/hash"
	"github.com/harness/gitness/git/hook"
	"github.com/harness/gitness/git/merge"
	"github.com/harness/gitness/git/parser"
	"github.com/harness/gitness/git/sha"
	"github.com/harness/gitness/git/sharedrepo"
	"github.com/harness/gitness/git/storage"
	"github.com/harness/gitness/git/tempdir"
	"github.com/harness/gitness/http"
	"github.com/harness/gitness/job"
	"github.com/harness/gitness/livelog"
	"github.com/harness/gitness/lock"
	"github.com/harness/gitness/profiler"
	"github.com/harness/gitness/pubsub"
	"github.com/harness/gitness/registry/app/api/controller/metadata"
	"github.com/harness/gitness/registry/app/api/handler/maven"
	"github.com/harness/gitness/registry/app/api/handler/oci"
	"github.com/harness/gitness/registry/app/api/middleware"
	"github.com/harness/gitness/registry/app/api/openapi/contracts/artifact"
	"github.com/harness/gitness/registry/app/api/router/harness"
	"github.com/harness/gitness/registry/app/common"
	"github.com/harness/gitness/registry/app/common/lib"
	"github.com/harness/gitness/registry/app/dist_temp/dcontext"
	"github.com/harness/gitness/registry/app/dist_temp/errcode"
	"github.com/harness/gitness/registry/app/dist_temp/requestutil"
	"github.com/harness/gitness/registry/app/driver"
	"github.com/harness/gitness/registry/app/driver/filesystem"
	"github.com/harness/gitness/registry/app/driver/s3-aws"
	"github.com/harness/gitness/registry/app/event"
	"github.com/harness/gitness/registry/app/manifest"
	"github.com/harness/gitness/registry/app/manifest/manifestlist"
	"github.com/harness/gitness/registry/app/manifest/ocischema"
	"github.com/harness/gitness/registry/app/pkg"
	"github.com/harness/gitness/registry/app/pkg/commons"
	"github.com/harness/gitness/registry/app/pkg/docker"
	"github.com/harness/gitness/registry/app/pkg/filemanager"
	"github.com/harness/gitness/registry/app/remote/adapter"
	"github.com/harness/gitness/registry/app/remote/adapter/awsecr"
	"github.com/harness/gitness/registry/app/remote/adapter/dockerhub"
	"github.com/harness/gitness/registry/app/remote/adapter/native"
	"github.com/harness/gitness/registry/app/remote/clients/registry"
	"github.com/harness/gitness/registry/app/remote/clients/registry/auth/basic"
	"github.com/harness/gitness/registry/app/remote/clients/registry/auth/bearer"
	"github.com/harness/gitness/registry/app/remote/clients/registry/auth/null"
	"github.com/harness/gitness/registry/app/remote/controller/proxy"
	"github.com/harness/gitness/registry/app/store/database/util"
	"github.com/harness/gitness/registry/app/store/migrations"
	"github.com/harness/gitness/registry/config"
	"github.com/harness/gitness/registry/gc"
	"github.com/harness/gitness/resources"
	"github.com/harness/gitness/ssh"
	"github.com/harness/gitness/store/database/dbtx"
	"github.com/harness/gitness/stream"
)
var iteration int

func TestMain(m *testing.M) {
	flag.IntVar(&iteration, "iteration", 1000, "IteraÃ§Ã£o do algoritmo (benchmarking)",)
	flag.Parse()

	code := m.Run()
	os.Exit(code)
}

func TestGodo(t *testing.T) {
	funcs := []any{
		auth.Check,
		auth.CheckAll,
		auth.CheckChild,
		auth.CheckConnector,
		auth.CheckGitspace,
		auth.CheckInfraProvider,
		auth.CheckPipeline,
		auth.CheckRegistry,
		auth.CheckRepo,
		auth.IsRepoOwner,
		auth.CheckRepoState,
		auth.CheckSecret,
		auth.CheckService,
		auth.CheckServiceAccount,
		auth.CheckSpace,
		auth.CheckSpaceScope,
		auth.CheckTemplate,
		auth.CheckUser,
		(*aiagent.Controller).GetAnalysis,
		aiagent.NewController,
		(*aiagent.Controller).GeneratePipeline,
		(*aiagent.Controller).GeneratePipelineStep,
		(*aiagent.Controller).HandleEvent,
		(*aiagent.Controller).HandleCallbackEvent,
		(*aiagent.Controller).SuggestPipeline,
		(*aiagent.Controller).UpdatePipeline,
		(*aiagent.Controller).UpdatePipelineStep,
		aiagent.ProvideController,
		capabilities.NewController,
		(capabilities.CapabilityExecution).GetType,
		(*capabilities.Controller).RunCapabilities,
		capabilities.ProvideController,
		(*check.Controller).ListChecks,
		(*check.Controller).ListRecentChecks,
		(*check.Controller).ListRecentChecksSpace,
		(*check.ReportInput).Sanitize,
		check.SanitizeJSONPayload,
		(*check.Controller).Report,
		check.NewController,
		check.ProvideCheckSanitizers,
		check.ProvideController,
		connector.NewController,
		(*connector.Controller).Create,
		(*connector.Controller).Delete,
		(*connector.Controller).Find,
		(*connector.Controller).Update,
		connector.ProvideController,
		(*execution.Controller).Cancel,
		execution.NewController,
		(*execution.Controller).Create,
		(*execution.Controller).Delete,
		(*execution.Controller).Find,
		(*execution.Controller).List,
		execution.ProvideController,
		(*githook.ControllerClientFactory).NewClient,
		(*githook.ControllerClient).PreReceive,
		(*githook.ControllerClient).Update,
		(*githook.ControllerClient).PostReceive,
		githook.NewController,
		githook.GetBaseSHAForScanningChanges,
		githook.NewPreReceiveExtender,
		(githook.NoOpPreReceiveExtender).Extend,
		githook.NewUpdateExtender,
		(githook.NoOpUpdateExtender).Extend,
		githook.NewPostReceiveExtender,
		(githook.NoOpPostReceiveExtender).Extend,
		(*githook.Controller).PostReceive,
		(*githook.Controller).PreReceive,
		githook.FMTDuration,
		(*githook.Controller).Update,
		githook.ProvideFactory,
		githook.ProvideController,
		githook.ProvidePreReceiveExtender,
		githook.ProvideUpdateExtender,
		githook.ProvidePostReceiveExtender,
		(*gitspace.Controller).Action,
		gitspace.NewController,
		(*gitspace.Controller).Create,
		(*gitspace.Controller).Delete,
		(*gitspace.Controller).Events,
		(*gitspace.Controller).Find,
		(*gitspace.Controller).ListAllGitspaces,
		(*gitspace.Controller).LogsStream,
		(*gitspace.Controller).LookupRepo,
		(*gitspace.Controller).Update,
		gitspace.ProvideController,
		infraprovider.NewController,
		(*infraprovider.Controller).Create,
		(*infraprovider.Controller).MapToInfraProviderConfig,
		(*infraprovider.Controller).CreateTemplate,
		(*infraprovider.Controller).CreateResources,
		(*infraprovider.Controller).Find,
		infraprovider.ProvideController,
		keywordsearch.NewController,
		(*keywordsearch.Controller).Search,
		keywordsearch.ProvideController,
		limiter.NewUnlimitedUsage,
		(limiter.UnlimitedUsage).Usage,
		limiter.NewResourceLimiter,
		(limiter.Unlimited).RepoCount,
		(limiter.Unlimited).RepoSize,
		limiter.ProvideLimiter,
		limiter.ProvideGitspaceLimiter,
		logs.NewController,
		(*logs.Controller).Find,
		(*logs.Controller).Tail,
		logs.ProvideController,
		migrate.NewController,
		(*migrate.Controller).CreateRepo,
		(*migrate.Controller).Labels,
		(*migrate.Controller).PullRequests,
		(*migrate.Controller).Rules,
		(*migrate.Controller).UpdateRepoState,
		(*migrate.Controller).Webhooks,
		migrate.ProvideController,
		pipeline.NewController,
		(*pipeline.Controller).Create,
		(*pipeline.Controller).Delete,
		(*pipeline.Controller).Find,
		(*pipeline.Controller).Update,
		pipeline.ProvideController,
		plugin.NewController,
		(*plugin.Controller).List,
		plugin.ProvideController,
		principal.ProvideController,
		(*pullreq.Controller).ActivityList,
		(*pullreq.Controller).ListChecks,
		(*pullreq.Controller).CodeOwners,
		(*pullreq.Controller).CommentApplySuggestions,
		(*pullreq.CommentCreateInput).IsReply,
		(*pullreq.CommentCreateInput).IsCodeComment,
		(*pullreq.CommentCreateInput).Sanitize,
		(*pullreq.Controller).CommentCreate,
		(*pullreq.Controller).CommentDelete,
		(*pullreq.CommentStatusInput).Validate,
		(*pullreq.Controller).CommentStatus,
		(*pullreq.CommentUpdateInput).Sanitize,
		(*pullreq.Controller).CommentUpdate,
		pullreq.NewController,
		(*pullreq.Controller).DeleteBranch,
		(*pullreq.FileViewAddInput).Validate,
		(*pullreq.Controller).FileViewAdd,
		(*pullreq.Controller).FileViewDelete,
		(*pullreq.Controller).FileViewList,
		(*pullreq.Controller).AssignLabel,
		(*pullreq.Controller).ListLabels,
		(*pullreq.Controller).UnassignLabel,
		(*pullreq.Controller).Merge,
		(*pullreq.Controller).Commits,
		(*pullreq.CreateInput).Sanitize,
		(*pullreq.Controller).Create,
		(*pullreq.Controller).RawDiff,
		(*pullreq.Controller).Diff,
		(*pullreq.Controller).Find,
		(*pullreq.Controller).FindByBranches,
		(*pullreq.Controller).List,
		(*pullreq.StateInput).Check,
		(*pullreq.Controller).State,
		(*pullreq.UpdateInput).Sanitize,
		(*pullreq.Controller).Update,
		(*pullreq.Controller).RestoreBranch,
		(*pullreq.ReviewSubmitInput).Validate,
		(*pullreq.Controller).ReviewSubmit,
		(*pullreq.Controller).ReviewerAdd,
		(*pullreq.Controller).ReviewersListCombined,
		(*pullreq.Controller).ReviewerDelete,
		(*pullreq.Controller).ReviewerList,
		(*pullreq.Controller).UserGroupReviewerAdd,
		(*pullreq.Controller).UserGroupReviewerDelete,
		pullreq.ProvideController,
		(*repo.Controller).Archive,
		(*repo.Controller).Blame,
		(*repo.Controller).CodeOwnersValidate,
		(*repo.CommitFilesOptions).Sanitize,
		(*repo.Controller).CommitFiles,
		(*repo.Controller).GetContent,
		(*repo.Controller).PathsDetails,
		(repo.RepositoryOutput).MarshalJSON,
		repo.NewController,
		repo.ValidateParentRef,
		(*repo.Controller).Create,
		(*repo.Controller).CreateBranch,
		(*repo.Controller).CreateCommitTag,
		(*repo.Controller).UpdateDefaultBranch,
		(*repo.Controller).DeleteBranch,
		(*repo.Controller).DeleteTag,
		(*repo.Controller).RawDiff,
		(*repo.Controller).CommitDiff,
		(*repo.Controller).DiffStats,
		(*repo.Controller).Diff,
		(*repo.Controller).Find,
		(*repo.Controller).GetBranch,
		(*repo.Controller).GetCommit,
		(*repo.Controller).GetCommitDivergences,
		(*repo.Controller).GitInfoRefs,
		(*repo.Controller).GitServicePack,
		repo.GetRepo,
		repo.GetRepoCheckAccess,
		repo.GetSpaceCheckAuthRepoCreation,
		repo.GetRepoOutput,
		repo.GetRepoOutputWithAccess,
		repo.GetRepoCheckServiceAccountAccess,
		(*repo.Controller).Import,
		(*repo.Controller).ImportProgress,
		(*repo.Controller).DefineLabel,
		(*repo.Controller).DeleteLabel,
		(*repo.Controller).ListLabels,
		(*repo.Controller).SaveLabel,
		(*repo.Controller).UpdateLabel,
		(*repo.Controller).DefineLabelValue,
		(*repo.Controller).DeleteLabelValue,
		(*repo.Controller).ListLabelValues,
		(*repo.Controller).UpdateLabelValue,
		(*repo.Controller).ListBranches,
		(*repo.Controller).ListCommitTags,
		(*repo.Controller).ListCommits,
		(*repo.Controller).ListPaths,
		(*repo.Controller).ListPipelines,
		(*repo.Controller).ListServiceAccounts,
		(*repo.Controller).MergeCheck,
		(*repo.Controller).Move,
		repo.NewNoOpRepoChecks,
		(*repo.NoOpRepoChecks).Create,
		(*repo.Controller).PipelineGenerate,
		(*repo.Controller).Purge,
		(*repo.Controller).PurgeNoAuth,
		(*repo.Controller).DeleteGitRepository,
		(*repo.Controller).Raw,
		(*repo.Controller).Rebase,
		(*repo.Controller).Restore,
		(*repo.Controller).RestoreNoAuth,
		(*repo.Controller).RuleCreate,
		(*repo.Controller).RuleDelete,
		(*repo.Controller).RuleFind,
		(*repo.Controller).RuleList,
		(*repo.Controller).RuleUpdate,
		(*repo.Controller).SoftDelete,
		(*repo.Controller).SoftDeleteNoAuth,
		(*repo.Controller).Squash,
		(*repo.Controller).Summary,
		(*repo.Controller).Update,
		(*repo.Controller).UpdatePublicAccess,
		repo.ProvideController,
		repo.ProvideRepoCheck,
		reposettings.NewController,
		reposettings.GetDefaultGeneralSettings,
		reposettings.GetGeneralSettingsMappings,
		reposettings.GetGeneralSettingsAsKeyValues,
		(*reposettings.Controller).GeneralFind,
		(*reposettings.Controller).GeneralUpdate,
		reposettings.GetDefaultSecuritySettings,
		reposettings.GetSecuritySettingsMappings,
		reposettings.GetSecuritySettingsAsKeyValues,
		(*reposettings.Controller).SecurityFind,
		(*reposettings.Controller).SecurityUpdate,
		reposettings.ProvideController,
		secret.NewController,
		(*secret.Controller).Create,
		secret.Dec,
		(*secret.Controller).Delete,
		(*secret.Controller).Find,
		(*secret.Controller).Update,
		secret.ProvideController,
		service.NewController,
		(*service.Controller).Create,
		(*service.Controller).CreateNoAuth,
		(*service.Controller).Delete,
		(*service.Controller).Find,
		(*service.Controller).FindNoAuth,
		(*service.Controller).List,
		(*service.Controller).Update,
		(*service.Controller).UpdateAdmin,
		service.ProvideController,
		serviceaccount.NewController,
		(*serviceaccount.Controller).Create,
		(*serviceaccount.Controller).CreateNoAuth,
		(*serviceaccount.Controller).CreateToken,
		(*serviceaccount.Controller).Delete,
		(*serviceaccount.Controller).DeleteToken,
		(*serviceaccount.Controller).Find,
		(*serviceaccount.Controller).FindNoAuth,
		(*serviceaccount.Controller).ListTokens,
		serviceaccount.ProvideController,
		(space.SpaceOutput).MarshalJSON,
		space.NewController,
		(*space.Controller).Create,
		(*space.Controller).Events,
		(*space.Controller).Export,
		(*space.Controller).ExportProgress,
		(*space.Controller).Find,
		space.GetSpaceCheckAuth,
		space.GetSpaceOutput,
		(*space.Controller).Import,
		(*space.Controller).ImportRepositories,
		(*space.Controller).DefineLabel,
		(*space.Controller).DeleteLabel,
		(*space.Controller).ListLabels,
		(*space.Controller).SaveLabel,
		(*space.Controller).UpdateLabel,
		(*space.Controller).DefineLabelValue,
		(*space.Controller).DeleteLabelValue,
		(*space.Controller).ListLabelValues,
		(*space.Controller).UpdateLabelValue,
		(*space.Controller).ListConnectors,
		(*space.Controller).ListExecutions,
		(*space.Controller).ListGitspaces,
		(*space.Controller).ListPipelines,
		(*space.Controller).ListRepositories,
		(*space.Controller).ListRepositoriesNoAuth,
		(*space.Controller).ListSecrets,
		(*space.Controller).ListServiceAccounts,
		(*space.Controller).ListSpaces,
		(*space.Controller).ListSpacesNoAuth,
		(*space.Controller).ListTemplates,
		(*space.MembershipAddInput).Validate,
		(*space.Controller).MembershipAdd,
		(*space.Controller).MembershipDelete,
		(*space.Controller).MembershipList,
		(*space.MembershipUpdateInput).Validate,
		(*space.Controller).MembershipUpdate,
		(*space.Controller).Move,
		(*space.Controller).ListPullReqs,
		(*space.Controller).Purge,
		(*space.Controller).PurgeNoAuth,
		(*space.Controller).Restore,
		(*space.Controller).RuleCreate,
		(*space.Controller).RuleDelete,
		(*space.Controller).RuleFind,
		(*space.Controller).RuleList,
		(*space.Controller).RuleUpdate,
		(*space.Controller).SoftDelete,
		(*space.Controller).SoftDeleteNoAuth,
		(*space.Controller).Update,
		(*space.Controller).UpdatePublicAccess,
		(*space.Controller).GetUsageMetrics,
		space.ProvideController,
		system.NewController,
		(*system.Controller).IsUserSignupAllowed,
		system.ProvideController,
		template.NewController,
		(*template.Controller).Create,
		(*template.Controller).Delete,
		(*template.Controller).Find,
		(*template.Controller).Update,
		template.ProvideController,
		trigger.NewController,
		(*trigger.Controller).Create,
		(*trigger.Controller).Delete,
		(*trigger.Controller).Find,
		(*trigger.Controller).List,
		(*trigger.Controller).Update,
		trigger.ProvideController,
		controller.TxOptLock,
		upload.NewController,
		(*upload.Controller).Download,
		(*upload.Controller).Upload,
		upload.ProvideController,
		user.NewController,
		(*user.Controller).Create,
		(*user.Controller).CreateNoAuth,
		(*user.Controller).CreateAccessToken,
		(*user.Controller).Delete,
		(*user.Controller).DeleteToken,
		(*user.Controller).Find,
		(*user.Controller).FindNoAuth,
		(*user.Controller).FindEmail,
		(*user.Controller).List,
		(*user.Controller).ListTokens,
		(*user.Controller).Login,
		user.GenerateSessionTokenIdentifier,
		(*user.Controller).Logout,
		(*user.Controller).MembershipSpaces,
		(*user.Controller).CreatePublicKey,
		(*user.Controller).DeletePublicKey,
		(*user.Controller).ListPublicKeys,
		(*user.Controller).Register,
		(*user.Controller).Update,
		(*user.Controller).UpdateAdmin,
		user.ProvideController,
		usergroup.NewController,
		(usergroup.Controller).List,
		usergroup.ProvideController,
		controller.CreateRPCExternalWriteParams,
		controller.CreateRPCInternalWriteParams,
		controller.MapBranch,
		controller.MapCommit,
		controller.MapRenameDetails,
		controller.MapSignature,
		controller.IdentityFromPrincipalInfo,
		controller.SystemServicePrincipalInfo,
		webhook.NewController,
		(webhook.NoopPreprocessor).PreprocessCreateInput,
		(webhook.NoopPreprocessor).PreprocessUpdateInput,
		(webhook.NoopPreprocessor).PreprocessFilter,
		(webhook.NoopPreprocessor).IsInternalCall,
		(*webhook.Controller).CreateRepo,
		(*webhook.Controller).DeleteRepo,
		(*webhook.Controller).FindRepo,
		(*webhook.Controller).FindExecutionRepo,
		(*webhook.Controller).ListRepo,
		(*webhook.Controller).ListExecutionsRepo,
		(*webhook.Controller).RetriggerExecutionRepo,
		(*webhook.Controller).UpdateRepo,
		(*webhook.Controller).CreateSpace,
		(*webhook.Controller).DeleteSpace,
		(*webhook.Controller).FindSpace,
		(*webhook.Controller).FindExecutionSpace,
		(*webhook.Controller).ListSpace,
		(*webhook.Controller).ListExecutionsSpace,
		(*webhook.Controller).RetriggerExecutionSpace,
		(*webhook.Controller).UpdateSpace,
		webhook.ProvideController,
		webhook.ProvidePreprocessor,
		account.HandleLogin,
		account.HandleLogout,
		account.HandleRegister,
		users.HandleCreate,
		users.HandleDelete,
		users.HandleFind,
		users.HandleList,
		users.HandleUpdate,
		address.Handler,
		authn.Attempt,
		authz.BlockSessionToken,
		encode.GitPathBefore,
		encode.TerminatedPathBefore,
		encode.TerminatedRegexPathBefore,
		goget.Middleware,
		logging.HLogRequestIDHandler,
		logging.HLogAccessLogHandler,
		logging.URLHandler,
		nocache.NoCache,
		web.PublicAccess,
		openapi.NewOpenAPIService,
		(*openapi.OpenAPI).Generate,
		(openapi.RuleType).Enum,
		(openapi.RuleDefinition).JSONSchemaOneOf,
		openapi.ProvideOpenAPIService,
		render.Pagination,
		render.PaginationNoTotal,
		render.PaginationLimit,
		render.NoCache,
		platform.RenderResource,
		render.DeleteSuccessful,
		render.JSON,
		render.Reader,
		render.Unprocessable,
		render.Violations,
		render.TranslatedUserError,
		render.NotFound,
		render.Unauthorized,
		render.Forbidden,
		render.Forbiddenf,
		render.BadRequest,
		render.BadRequestf,
		render.InternalError,
		render.UserError,
		render.StreamSSE,
		request.Ext,
		request.ParseArchiveParams,
		request.GetAccessTokenFromQuery,
		request.GetIncludeCookieFromQueryOrDefault,
		request.GetTokenFromCookie,
		request.ParseCheckListOptions,
		request.ParseCheckRecentOptions,
		request.GetOptionalRemainderFromPath,
		request.GetRemainderFromPath,
		request.ParseQuery,
		request.ParsePage,
		request.ParseLimit,
		request.ParseOrder,
		request.ParseSort,
		request.ParsePaginationFromRequest,
		request.ParseListQueryFilterFromRequest,
		request.ParseCreated,
		request.ParseUpdated,
		request.ParseEdited,
		request.GetContentEncodingFromHeadersOrDefault,
		request.ParseRecursiveFromQuery,
		request.ParseInheritedFromQuery,
		request.ParseIncludePullreqCountFromQuery,
		request.ParseAssignableFromQuery,
		request.GetDeletedAtFromQueryOrError,
		request.GetDeletedBeforeOrAtFromQuery,
		request.GetDeletedAtFromQuery,
		request.GetIfNoneMatchFromHeader,
		request.GetSignatureFromHeaderOrDefault,
		request.GetConnectorRefFromPath,
		request.WithAuthSession,
		request.AuthSessionFrom,
		request.PrincipalFrom,
		request.WithUser,
		request.UserFrom,
		request.WithServiceAccount,
		request.ServiceAccountFrom,
		request.WithSpace,
		request.SpaceFrom,
		request.WithRepo,
		request.RepoFrom,
		request.WithRequestID,
		request.RequestIDFrom,
		request.WithRequestIDSSH,
		request.ParseSortExecution,
		request.ParseListExecutionsFilterFromRequest,
		request.GetGitRefFromQueryOrDefault,
		request.GetIncludeCommitFromQueryOrDefault,
		request.GetIncludeStatsFromQueryOrDefault,
		request.GetIncludeGitStatsFromQueryOrDefault,
		request.GetIncludeChecksFromQueryOrDefault,
		request.GetIncludeRulesFromQueryOrDefault,
		request.GetIncludePullReqsFromQueryOrDefault,
		request.GetMaxDivergenceFromQueryOrDefault,
		request.GetIncludeDirectoriesFromQueryOrDefault,
		request.GetFlattenDirectoriesFromQueryOrDefault,
		request.GetCommitSHAFromPath,
		request.ParseSortBranch,
		request.ParseBranchMetadataOptions,
		request.ParseBranchFilter,
		request.ParseSortTag,
		request.ParseTagFilter,
		request.ParseCommitFilter,
		request.GetGitProtocolFromHeadersOrDefault,
		request.GetGitServiceTypeFromQuery,
		request.GetFileDiffFromQuery,
		request.GetCommitSHAFromQueryOrDefault,
		request.GetGitspaceRefFromPath,
		request.ParseGitspaceSort,
		request.ParseGitspaceOwner,
		request.ParseGitspaceStates,
		request.ParseGitspaceFilter,
		request.GetInfraProviderRefFromPath,
		request.GetLabelKeyFromPath,
		request.GetLabelValueFromPath,
		request.GetLabelIDFromPath,
		request.ParseLabelFilter,
		request.ParseAssignableLabelFilter,
		request.ParseMembershipUserSort,
		request.ParseMembershipUserFilter,
		request.ParseMembershipSpaceSort,
		request.ParseMembershipSpaceFilter,
		request.GetPipelineIdentifierFromPath,
		request.GetBranchFromQuery,
		request.GetExecutionNumberFromPath,
		request.GetStageNumberFromPath,
		request.GetStepNumberFromPath,
		request.GetLatestFromPath,
		request.GetTriggerIdentifierFromPath,
		request.ParseListPipelinesFilterFromRequest,
		request.GetUserIDFromPath,
		request.GetPrincipalIDFromPath,
		request.GetPrincipalUIDFromPath,
		request.GetUserUIDFromPath,
		request.GetServiceAccountUIDFromPath,
		request.ParseSortUser,
		request.ParseUserFilter,
		request.ParsePrincipalTypes,
		request.ParsePrincipalFilter,
		request.GetPublicKeyIdentifierFromPath,
		request.ParseListPublicKeyQueryFilterFromRequest,
		request.GetPullReqNumberFromPath,
		request.GetReviewerIDFromPath,
		request.GetUserGroupIDFromPath,
		request.GetPullReqCommentIDPath,
		request.GetPullReqSourceBranchFromPath,
		request.GetPullReqTargetBranchFromPath,
		request.GetSourceRepoRefFromQueryOrDefault,
		request.ParseSortPullReq,
		request.ParsePullReqMetadataOptions,
		request.ParsePullReqFilter,
		request.ParsePullReqActivityFilter,
		request.GetRepoRefFromPath,
		request.ParseSortRepo,
		request.ParseRepoFilter,
		request.ParseRuleFilter,
		request.GetRuleIdentifierFromPath,
		request.ParseBypassRulesFromQuery,
		request.ParseDryRunRulesFromQuery,
		request.GetSecretRefFromPath,
		request.GetSpaceRefFromPath,
		request.ParseSortSpace,
		request.ParseSpaceFilter,
		request.GetIncludeSubspacesFromQuery,
		request.GetTemplateRefFromPath,
		request.GetTemplateTypeFromPath,
		request.QueryParamAsUnixMillisOrDefault,
		request.GetTokenIdentifierFromPath,
		request.GetCookie,
		request.GetHeaderOrDefault,
		request.GetHeader,
		request.PathParamOrError,
		request.PathParamOrEmpty,
		request.PathParam,
		request.QueryParam,
		request.QueryParamList,
		request.QueryParamOrDefault,
		request.QueryParamOrError,
		request.QueryParamAsPositiveInt64OrDefault,
		request.QueryParamAsPositiveInt64OrError,
		request.QueryParamAsPositiveInt64,
		request.PathParamAsPositiveInt64,
		request.QueryParamAsBoolOrDefault,
		request.QueryParamListAsPositiveInt64,
		request.GetWebhookIdentifierFromPath,
		request.GetWebhookExecutionIDFromPath,
		request.ParseWebhookFilter,
		request.ParseWebhookExecutionFilter,
		request.ParseSortWebhook,
		usererror.Translate,
		(*usererror.Error).Error,
		usererror.New,
		usererror.Newf,
		usererror.NewWithPayload,
		usererror.BadRequest,
		usererror.BadRequestf,
		usererror.RequestTooLargef,
		usererror.UnprocessableEntityf,
		usererror.BadRequestWithPayload,
		usererror.Forbidden,
		usererror.NotFound,
		usererror.NotFoundf,
		usererror.ConflictWithPayload,
		usererror.Conflict,
		bootstrap.NewSystemServiceSession,
		bootstrap.NewPipelineServiceSession,
		bootstrap.NewGitspaceServiceSession,
		bootstrap.System,
		bootstrap.AdminUser,
		bootstrap.SystemService,
		bootstrap.PipelineService,
		bootstrap.GitspaceService,
		bootstrap.ProvideBootstrap,
		scm.NewService,
		cron.NewNightly,
		(*cron.Nightly).Run,
		(*events.Reporter).BranchCreated,
		(*events.Reader).RegisterBranchCreated,
		(*events.Reporter).BranchUpdated,
		(*events.Reader).RegisterBranchUpdated,
		(*events.Reporter).BranchDeleted,
		(*events.Reader).RegisterBranchDeleted,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		(*events.Reporter).TagCreated,
		(*events.Reader).RegisterTagCreated,
		(*events.Reporter).TagUpdated,
		(*events.Reader).RegisterTagUpdated,
		(*events.Reporter).TagDeleted,
		(*events.Reader).RegisterTagDeleted,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		(*events.Reporter).BranchUpdated,
		(*events.Reader).RegisterBranchUpdated,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		events.NewReaderFactory,
		(*events.Reader).Configure,
		events.NewReporter,
		events.ProvideReaderFactory,
		events.ProvideReporter,
		(infrastructure.InfraProvisioner).Find,
		(infrastructure.InfraProvisioner).PostInfraEventComplete,
		infrastructure.NewInfraProvisionerService,
		(infrastructure.InfraProvisioner).TriggerInfraEvent,
		(infrastructure.InfraProvisioner).TriggerInfraEventWithOpts,
		infrastructure.ProvideInfraProvisionerService,
		logutil.NewStatefulLogger,
		(*logutil.StatefulLogger).CreateLogStream,
		(*logutil.StatefulLogger).TailLogStream,
		(*logutil.LogStreamInstance).Write,
		(*logutil.LogStreamInstance).Flush,
		(*logutil.LogStreamInstance).Info,
		(*logutil.LogStreamInstance).Debug,
		(*logutil.LogStreamInstance).Warn,
		(*logutil.LogStreamInstance).Error,
		logutil.ProvideStatefulLogger,
		container.ExtractRunArgs,
		container.ExtractEnv,
		container.ExtractForwardPorts,
		container.ExtractLifecycleCommands,
		container.AddIDECustomizationsArg,
		container.AddIDEDownloadURLArg,
		container.AddIDEDirNameArg,
		container.ManageContainer,
		container.FetchContainerState,
		container.CreateContainer,
		container.GetContainerInfo,
		container.ExtractMetadataAndUserFromImage,
		container.CopyImage,
		container.PullImage,
		container.ExtractRunArgsWithLogging,
		container.GetContainerResponse,
		container.GetGitspaceInfoFromContainerLabels,
		(*container.EmbeddedDockerOrchestrator).ExecuteSteps,
		container.NewEmbeddedDockerOrchestrator,
		(*container.EmbeddedDockerOrchestrator).CreateAndStartGitspace,
		(*container.EmbeddedDockerOrchestrator).StopGitspace,
		(*container.EmbeddedDockerOrchestrator).Status,
		(*container.EmbeddedDockerOrchestrator).StopAndRemoveGitspace,
		(*container.EmbeddedDockerOrchestrator).StreamLogs,
		container.InstallFeatures,
		container.GetGitspaceContainerName,
		container.GetUserHomeDir,
		container.GetContainerUser,
		container.GetRemoteUser,
		container.ExtractRemoteUserFromLabels,
		container.ExtractLifecycleHooksFromLabels,
		container.ExecuteLifecycleCommands,
		container.ProvideEmbeddedDockerOrchestrator,
		(*devcontainer.Exec).ExecuteCommand,
		(*devcontainer.Exec).ExecuteCommandInHomeDirAndLog,
		ide.NewFactory,
		ide.NewFactoryWithIDEs,
		(*ide.Factory).GetIDE,
		ide.NewJetBrainsIDEService,
		(*ide.JetBrainsIDE).Setup,
		(*ide.JetBrainsIDE).Run,
		(*ide.JetBrainsIDE).Port,
		(*ide.JetBrainsIDE).Type,
		(*ide.JetBrainsIDE).GenerateURL,
		ide.NewVsCodeService,
		(*ide.VSCode).Setup,
		(*ide.VSCode).Run,
		(*ide.VSCode).Port,
		(*ide.VSCode).Type,
		(*ide.VSCode).GenerateURL,
		ide.NewVsCodeWebService,
		(*ide.VSCodeWeb).Setup,
		(*ide.VSCodeWeb).Run,
		(*ide.VSCodeWeb).Port,
		(*ide.VSCodeWeb).Type,
		(*ide.VSCodeWeb).GenerateURL,
		ide.ProvideVSCodeWebService,
		ide.ProvideVSCodeService,
		ide.ProvideJetBrainsIDEsService,
		ide.ProvideIDEFactory,
		(orchestrator.Orchestrator).ResumeStartGitspace,
		(orchestrator.Orchestrator).ResumeStopGitspace,
		(orchestrator.Orchestrator).ResumeDeleteGitspace,
		(orchestrator.Orchestrator).ResumeCleanupInstanceResources,
		orchestrator.NewOrchestrator,
		(orchestrator.Orchestrator).TriggerStartGitspace,
		(orchestrator.Orchestrator).TriggerStopGitspace,
		(orchestrator.Orchestrator).TriggerCleanupInstanceResources,
		(orchestrator.Orchestrator).TriggerDeleteGitspace,
		(orchestrator.Orchestrator).GetGitspaceLogs,
		runarg.NewResolver,
		(*runarg.Resolver).ResolveSupportedRunArgs,
		runarg.NewStaticProvider,
		(*runarg.StaticProvider).ProvideSupportedRunArgs,
		runarg.ProvideStaticProvider,
		runarg.ProvideResolver,
		utils.BuildWithFeatures,
		utils.DownloadFeatures,
		utils.GetOSInfoScript,
		utils.ValidateSupportedOS,
		utils.SetEnv,
		utils.InstallGit,
		utils.SetupGitCredentials,
		utils.CloneCode,
		utils.ResolveFeatures,
		utils.LoadTemplates,
		utils.GenerateScriptFromTemplate,
		utils.SortFeatures,
		utils.InstallTools,
		utils.InstallToolsForVsCodeWeb,
		utils.InstallToolsForVsCode,
		utils.InstallToolsForJetBrains,
		utils.ManageUser,
		orchestrator.ProvideOrchestrator,
		platformconnector.NewGitnessPlatformConnector,
		(*platformconnector.GitnessPlatformConnector).FetchConnectors,
		platformconnector.ProvideGitnessPlatformConnector,
		jwt.GenerateForToken,
		jwt.GenerateWithMembership,
		jwt.GenerateForTokenWithAccessPermissions,
		paths.DisectLeaf,
		paths.DisectRoot,
		paths.Concatenate,
		paths.Segments,
		paths.Depth,
		paths.IsAncesterOf,
		paths.Parent,
		canceler.New,
		canceler.ProvideCanceler,
		checks.Write,
		commit.ProvideService,
		jsonnet.Parse,
		starlark.Parse,
		converter.ProvideService,
		file.ProvideService,
		logger.WithWrappedZerolog,
		logger.WithUnwrappedZerolog,
		manager.NewEmbeddedClient,
		manager.ConvertToDroneStage,
		manager.ConvertToDroneSteps,
		manager.ConvertToDroneStep,
		manager.ConvertFromDroneStep,
		manager.ConvertFromDroneSteps,
		manager.ConvertFromDroneStage,
		manager.ConvertFromDroneLine,
		manager.ConvertToDroneBuild,
		manager.ConvertToDroneRepo,
		manager.ConvertToDroneFile,
		manager.ConvertToDroneSecret,
		manager.ConvertToDroneSecrets,
		manager.ConvertToDroneNetrc,
		manager.New,
		(*manager.Manager).Request,
		(*manager.Manager).Accept,
		(*manager.Manager).Write,
		(*manager.Manager).UploadLogs,
		(*manager.Manager).Details,
		(*manager.Manager).BeforeStep,
		(*manager.Manager).AfterStep,
		(*manager.Manager).BeforeStage,
		(*manager.Manager).AfterStage,
		(*manager.Manager).Watch,
		manager.ProvideExecutionManager,
		manager.ProvideExecutionClient,
		resolver.NewManager,
		(*resolver.Manager).GetLookupFn,
		(*resolver.Manager).Populate,
		resolver.Resolve,
		resolver.ProvideResolver,
		runner.NewExecutionPoller,
		runner.NewExecutionRunner,
		runner.ProvideExecutionRunner,
		runner.ProvideExecutionPoller,
		scheduler.ProvideScheduler,
		dag.New,
		(*dag.Dag).Add,
		(*dag.Dag).Get,
		(*dag.Dag).Dependencies,
		(*dag.Dag).Ancestors,
		(*dag.Dag).DetectCycles,
		triggerer.Envs,
		triggerer.New,
		triggerer.ProvideTriggerer,
		router.NewAPIHandler,
		router.SetupSpaceLabels,
		router.SetupWebhookSpace,
		router.SetupRulesSpace,
		router.SetupRepoLabels,
		router.SetupUploads,
		router.SetupGitHooks,
		router.SetupPullReq,
		router.SetupWebhookRepo,
		router.SetupChecks,
		router.SetupRulesRepo,
		router.NewAPIRouter,
		(*router.APIRouter).Handle,
		(*router.APIRouter).IsEligibleTraffic,
		(*router.APIRouter).Name,
		router.NewGitHandler,
		router.NewGitRouter,
		(*router.GitRouter).Handle,
		(*router.GitRouter).IsEligibleTraffic,
		(*router.GitRouter).Name,
		router.WithLoggingRouter,
		router.NewRouter,
		(*router.Router).ServeHTTP,
		router.StripPrefix,
		router.NewSecure,
		router.NewWebHandler,
		router.NewWebRouter,
		(*router.WebRouter).Handle,
		(*router.WebRouter).IsEligibleTraffic,
		(*router.WebRouter).Name,
		router.GetGitRoutingHost,
		router.ProvideRouter,
		server.ProvideServer,
		(*cleanup.Config).Prepare,
		cleanup.NewService,
		(*cleanup.Service).Register,
		cleanup.ProvideService,
		(*codecomments.Migrator).MigrateNew,
		(*codecomments.Migrator).MigrateOld,
		codecomments.ProvideMigrator,
		(*codeowners.TooLargeError).Error,
		(*codeowners.TooLargeError).Is,
		(*codeowners.FileParseError).Error,
		(*codeowners.FileParseError).Unwrap,
		(*codeowners.FileParseError).Is,
		(*codeowners.Entry).IsOwnershipReset,
		codeowners.New,
		(*codeowners.Service).Evaluate,
		(*codeowners.Service).Validate,
		codeowners.ProvideCodeOwners,
		(*exporter.Repository).Register,
		(*exporter.Repository).RunManyForSpace,
		(*exporter.Repository).Handle,
		(*exporter.Repository).GetProgressForSpace,
		exporter.ProvideSpaceExporter,
		(*gitspaceevent.Config).Sanitize,
		gitspaceevent.NewService,
		gitspaceevent.ProvideService,
		gitspaceinfraevent.NewService,
		gitspaceinfraevent.ProvideService,
		importer.JobIDFromRepoID,
		importer.RepoIDFromJobID,
		(importer.ProviderType).Enum,
		(*importer.RepositoryInfo).ToRepo,
		importer.LoadRepositoryFromProvider,
		importer.LoadRepositoriesFromProviderSpace,
		(importer.PipelineOption).Enum,
		(*importer.Repository).Register,
		(*importer.Repository).Run,
		(*importer.Repository).RunMany,
		(*importer.Repository).Handle,
		(*importer.Repository).GetProgress,
		(*importer.Repository).Cancel,
		importer.ProvideRepoImporter,
		instrument.NewConsumer,
		(instrument.EventType).String,
		(instrument.Noop).Track,
		(instrument.Noop).Close,
		instrument.NewRepositoryCount,
		(*instrument.RepositoryCount).Handle,
		instrument.ProvideGitConsumer,
		instrument.ProvideRepositoryCount,
		instrument.ProvideService,
		(*label.Service).Define,
		(*label.Service).Update,
		(*label.Service).Save,
		(*label.Service).Find,
		(*label.Service).FindByID,
		(*label.Service).List,
		(*label.Service).Delete,
		(*label.AssignToPullReqOut).ToLabelPullReqAssignmentInfo,
		(*label.Service).AssignToPullReq,
		(*label.Service).AssignToPullReqOnCreation,
		(*label.Service).UnassignFromPullReq,
		(*label.Service).ListPullReqLabels,
		(*label.Service).Backfill,
		(*label.Service).BackfillMany,
		(*label.Service).DefineValue,
		(*label.Service).UpdateValue,
		(*label.Service).ListValues,
		(*label.Service).DeleteValue,
		label.New,
		label.ProvideLabel,
		locker.NewLocker,
		(locker.Locker).LockPR,
		(locker.Locker).LockDefaultBranch,
		locker.ProvideLocker,
		messaging.NewSlack,
		messaging.ProvideSlack,
		(*metric.Collector).Register,
		(*metric.Collector).Handle,
		metric.ProvideCollector,
		notification.NewMailClient,
		(notification.MailClient).SendCommentPRAuthor,
		(notification.MailClient).SendCommentMentions,
		(notification.MailClient).SendCommentParticipants,
		(notification.MailClient).SendReviewerAdded,
		(notification.MailClient).SendPullReqBranchUpdated,
		(notification.MailClient).SendReviewSubmitted,
		(notification.MailClient).SendPullReqStateChanged,
		notification.GetSubjectPullRequest,
		notification.GetHTMLBody,
		notification.GenerateEmailFromPayload,
		notification.RetrieveEmailsFromPrincipals,
		mailer.NewMailClient,
		(mailer.GoMailClient).Send,
		mailer.ToGoMail,
		mailer.ProvideMailClient,
		notification.LoadTemplates,
		notification.NewService,
		notification.ProvideNotificationService,
		notification.ProvideMailClient,
		(protection.DefBypass).Sanitize,
		protection.GetRuleInfos,
		protection.ToJSON,
		(*protection.Pattern).JSON,
		(*protection.Pattern).Validate,
		(*protection.Pattern).Matches,
		(*protection.Branch).MergeVerify,
		(*protection.Branch).RequiredChecks,
		(*protection.Branch).RefChangeVerify,
		(*protection.Branch).UserIDs,
		(*protection.Branch).UserGroupIDs,
		(*protection.Branch).Sanitize,
		protection.IsCritical,
		protection.IsBypassed,
		protection.NewManager,
		(*protection.Manager).Register,
		(*protection.Manager).FromJSON,
		(*protection.Manager).SanitizeJSON,
		(*protection.Manager).ForRepository,
		protection.GenerateErrorMessageForBlockingViolations,
		(*protection.DefLifecycle).RefChangeVerify,
		(*protection.DefLifecycle).Sanitize,
		(*protection.DefPullReq).MergeVerify,
		(*protection.DefPullReq).RequiredChecks,
		(*protection.DefApprovals).Sanitize,
		(protection.DefComments).Sanitize,
		(protection.DefStatusChecks).MarshalJSON,
		(*protection.DefStatusChecks).UnmarshalJSON,
		(*protection.DefStatusChecks).Sanitize,
		(*protection.DefMerge).Sanitize,
		(*protection.DefPush).Sanitize,
		(*protection.DefPullReq).Sanitize,
		protection.ProvideManager,
		publicaccess.NewService,
		publicaccess.ProvidePublicAccess,
		publickey.From,
		publickey.ParseString,
		publickey.Parse,
		(publickey.KeyInfo).Matches,
		(publickey.KeyInfo).MatchesKey,
		(publickey.KeyInfo).Fingerprint,
		(publickey.KeyInfo).Type,
		publickey.NewService,
		(publickey.LocalService).ValidateKey,
		publickey.ProvidePublicKey,
		refcache.NewRepoFinder,
		(refcache.RepoFinder).FindByRef,
		(refcache.RepoFinder).FindDeletedByRef,
		refcache.NewSpaceCache,
		refcache.ProvideSpaceCache,
		refcache.ProvideRepoFinder,
		(*rules.Service).Create,
		(*rules.Service).Delete,
		(*rules.Service).Find,
		(*rules.Service).List,
		rules.NewService,
		(*rules.Service).Update,
		rules.ProvideService,
		settings.NewService,
		(*settings.Service).Set,
		(*settings.Service).SetMany,
		(*settings.Service).Get,
		(*settings.Service).Map,
		(*settings.Service).RepoSet,
		(*settings.Service).RepoSetMany,
		(*settings.Service).RepoGet,
		(*settings.Service).RepoMap,
		(*settings.Service).SystemSet,
		(*settings.Service).SystemSetMany,
		(*settings.Service).SystemGet,
		(*settings.Service).SystemMap,
		settings.ProvideService,
		usage.NewConfig,
		usage.Middleware,
		(*usage.SpaceStoreMock).FindByRef,
		(*usage.SpaceStoreMock).FindByIDs,
		(*usage.MetricsMock).GetMetrics,
		(*usage.MetricsMock).UpsertOptimistic,
		(*usage.MetricsMock).List,
		usage.NewMediator,
		(*usage.Mediator).Start,
		(*usage.Mediator).Stop,
		(*usage.Mediator).Send,
		(*usage.Mediator).Wait,
		(*usage.Mediator).Size,
		usage.ProvideMediator,
		services.ProvideGitspaceServices,
		services.ProvideServices,
		sse.NewStreamer,
		sse.ProvideEventsStreaming,
		cache.New,
		cache.ProvidePrincipalInfoCache,
		cache.ProvidePathCache,
		cache.ProvideRepoGitInfoCache,
		cache.ProvideInfraProviderResourceCache,
		database.NewCheckStore,
		(*database.CheckStore).FindByIdentifier,
		(*database.CheckStore).Upsert,
		(*database.CheckStore).Count,
		(*database.CheckStore).List,
		(*database.CheckStore).ListRecent,
		(*database.CheckStore).ListRecentSpace,
		(*database.CheckStore).ListResults,
		(*database.CheckStore).ResultSummary,
		database.NewCodeCommentView,
		(*database.CodeCommentView).ListNotAtSourceSHA,
		(*database.CodeCommentView).ListNotAtMergeBaseSHA,
		(*database.CodeCommentView).UpdateAll,
		database.NewConnectorStore,
		database.PartialMatch,
		database.EncodeToSQLXJSON,
		database.NewExecutionStore,
		database.NewGitspaceConfigStore,
		database.NewGitspaceEventStore,
		database.NewGitspaceInstanceStore,
		database.NewInfraProviderConfigStore,
		database.NewInfraProviderResourceStore,
		database.NewInfraProviderResourceView,
		(database.InfraProviderResourceView).Find,
		(database.InfraProviderResourceView).FindMany,
		database.NewInfraProviderTemplateStore,
		database.NewInfraProvisionedStore,
		database.NewJobStore,
		(*database.JobStore).Find,
		(*database.JobStore).DeleteByGroupID,
		(*database.JobStore).ListByGroupID,
		(*database.JobStore).Create,
		(*database.JobStore).Upsert,
		(*database.JobStore).UpdateDefinition,
		(*database.JobStore).UpdateExecution,
		(*database.JobStore).UpdateProgress,
		(*database.JobStore).CountRunning,
		(*database.JobStore).ListReady,
		(*database.JobStore).ListDeadlineExceeded,
		(*database.JobStore).NextScheduledTime,
		(*database.JobStore).DeleteOld,
		(*database.JobStore).DeleteByUID,
		database.NewLabelStore,
		database.NewPullReqLabelStore,
		database.NewLabelValueStore,
		database.NewMembershipStore,
		(*database.MembershipStore).Find,
		(*database.MembershipStore).FindUser,
		(*database.MembershipStore).Create,
		(*database.MembershipStore).Update,
		(*database.MembershipStore).Delete,
		(*database.MembershipStore).CountUsers,
		(*database.MembershipStore).ListUsers,
		(*database.MembershipStore).CountSpaces,
		(*database.MembershipStore).ListSpaces,
		database.NewPipelineStore,
		database.NewPluginStore,
		database.NewPrincipalStore,
		(*database.PrincipalStore).Find,
		(*database.PrincipalStore).FindByUID,
		(*database.PrincipalStore).FindManyByUID,
		(*database.PrincipalStore).FindByEmail,
		(*database.PrincipalStore).List,
		database.NewPrincipalInfoView,
		(*database.PrincipalInfoView).Find,
		(*database.PrincipalInfoView).FindMany,
		(*database.PrincipalStore).FindService,
		(*database.PrincipalStore).FindServiceByUID,
		(*database.PrincipalStore).CreateService,
		(*database.PrincipalStore).UpdateService,
		(*database.PrincipalStore).DeleteService,
		(*database.PrincipalStore).ListServices,
		(*database.PrincipalStore).CountServices,
		(*database.PrincipalStore).FindServiceAccount,
		(*database.PrincipalStore).FindServiceAccountByUID,
		(*database.PrincipalStore).CreateServiceAccount,
		(*database.PrincipalStore).UpdateServiceAccount,
		(*database.PrincipalStore).DeleteServiceAccount,
		(*database.PrincipalStore).ListServiceAccounts,
		(*database.PrincipalStore).CountServiceAccounts,
		(*database.PrincipalStore).FindUser,
		(*database.PrincipalStore).FindUserByUID,
		(*database.PrincipalStore).FindUserByEmail,
		(*database.PrincipalStore).CreateUser,
		(*database.PrincipalStore).UpdateUser,
		(*database.PrincipalStore).DeleteUser,
		(*database.PrincipalStore).ListUsers,
		(*database.PrincipalStore).CountUsers,
		database.NewPublicAccessStore,
		(*database.PublicAccessStore).Find,
		(*database.PublicAccessStore).Create,
		(*database.PublicAccessStore).Delete,
		database.NewPublicKeyStore,
		(database.PublicKeyStore).Find,
		(database.PublicKeyStore).FindByIdentifier,
		(database.PublicKeyStore).Create,
		(database.PublicKeyStore).DeleteByIdentifier,
		(database.PublicKeyStore).MarkAsVerified,
		(database.PublicKeyStore).Count,
		(database.PublicKeyStore).List,
		(database.PublicKeyStore).ListByFingerprint,
		database.NewPullReqStore,
		(*database.PullReqStore).Find,
		(*database.PullReqStore).FindByNumberWithLock,
		(*database.PullReqStore).FindByNumber,
		(*database.PullReqStore).Create,
		(*database.PullReqStore).Update,
		(*database.PullReqStore).UpdateOptLock,
		(*database.PullReqStore).UpdateActivitySeq,
		(*database.PullReqStore).ResetMergeCheckStatus,
		(*database.PullReqStore).Delete,
		(*database.PullReqStore).Count,
		(*database.PullReqStore).List,
		(*database.PullReqStore).Stream,
		(*database.PullReqStore).ListOpenByBranchName,
		database.NewPullReqActivityStore,
		(*database.PullReqActivityStore).Find,
		(*database.PullReqActivityStore).Create,
		(*database.PullReqActivityStore).CreateWithPayload,
		(*database.PullReqActivityStore).Update,
		(*database.PullReqActivityStore).UpdateOptLock,
		(*database.PullReqActivityStore).Count,
		(*database.PullReqActivityStore).List,
		(*database.PullReqActivityStore).ListAuthorIDs,
		(*database.PullReqActivityStore).CountUnresolved,
		database.NewPullReqFileViewStore,
		(*database.PullReqFileViewStore).Upsert,
		(*database.PullReqFileViewStore).DeleteByFileForPrincipal,
		(*database.PullReqFileViewStore).MarkObsolete,
		(*database.PullReqFileViewStore).List,
		database.NewPullReqReviewerStore,
		(*database.PullReqReviewerStore).Find,
		(*database.PullReqReviewerStore).Create,
		(*database.PullReqReviewerStore).Update,
		(*database.PullReqReviewerStore).Delete,
		(*database.PullReqReviewerStore).List,
		database.NewPullReqReviewStore,
		(*database.PullReqReviewStore).Find,
		(*database.PullReqReviewStore).Create,
		database.NewRepoStore,
		(*database.RepoStore).Find,
		(*database.RepoStore).FindDeleted,
		(*database.RepoStore).FindActiveByUID,
		(*database.RepoStore).FindDeletedByUID,
		(*database.RepoStore).Create,
		(*database.RepoStore).Update,
		(*database.RepoStore).UpdateSize,
		(*database.RepoStore).GetSize,
		(*database.RepoStore).UpdateOptLock,
		(*database.RepoStore).SoftDelete,
		(*database.RepoStore).Purge,
		(*database.RepoStore).Restore,
		(*database.RepoStore).Count,
		(*database.RepoStore).CountByRootSpaces,
		(*database.RepoStore).List,
		(*database.RepoStore).ListSizeInfos,
		database.NewRepoGitInfoView,
		(*database.RepoGitInfoView).Find,
		database.NewRuleStore,
		(*database.RuleStore).Find,
		(*database.RuleStore).FindByIdentifier,
		(*database.RuleStore).Create,
		(*database.RuleStore).Update,
		(*database.RuleStore).Delete,
		(*database.RuleStore).Count,
		(*database.RuleStore).List,
		(*database.RuleStore).ListAllRepoRules,
		database.NewSecretStore,
		database.NewSettingsStore,
		(*database.SettingsStore).Find,
		(*database.SettingsStore).FindMany,
		(*database.SettingsStore).Upsert,
		database.NewSpaceStore,
		(*database.SpaceStore).Find,
		(*database.SpaceStore).FindByIDs,
		(*database.SpaceStore).FindByRef,
		(*database.SpaceStore).FindByRefCaseInsensitive,
		(*database.SpaceStore).FindByRefAndDeletedAt,
		(*database.SpaceStore).GetRootSpace,
		(*database.SpaceStore).GetAncestorIDs,
		(*database.SpaceStore).GetTreeLevel,
		(*database.SpaceStore).GetAncestors,
		(*database.SpaceStore).GetAncestorsData,
		(*database.SpaceStore).GetDescendantsData,
		(*database.SpaceStore).GetDescendantsIDs,
		(*database.SpaceStore).Create,
		(*database.SpaceStore).Update,
		(*database.SpaceStore).UpdateOptLock,
		(*database.SpaceStore).FindForUpdate,
		(*database.SpaceStore).SoftDelete,
		(*database.SpaceStore).Purge,
		(*database.SpaceStore).Restore,
		(*database.SpaceStore).Count,
		(*database.SpaceStore).List,
		database.NewSpacePathStore,
		(*database.SpacePathStore).InsertSegment,
		(*database.SpacePathStore).FindPrimaryBySpaceID,
		(*database.SpacePathStore).FindByPath,
		(*database.SpacePathStore).DeletePrimarySegment,
		(*database.SpacePathStore).DeletePathsAndDescendandPaths,
		database.NewStageStore,
		database.NewStepStore,
		database.NewTemplateStore,
		database.NewTokenStore,
		(*database.TokenStore).Find,
		(*database.TokenStore).FindByIdentifier,
		(*database.TokenStore).Create,
		(*database.TokenStore).Delete,
		(*database.TokenStore).DeleteExpiredBefore,
		(*database.TokenStore).Count,
		(*database.TokenStore).List,
		database.NewTriggerStore,
		database.NewUsageMetricsStore,
		(*database.UsageMetricsStore).Upsert,
		(*database.UsageMetricsStore).UpsertOptimistic,
		(*database.UsageMetricsStore).GetMetrics,
		(*database.UsageMetricsStore).List,
		(*database.UsageMetricsStore).Date,
		database.NewUserGroupStore,
		(*database.UserGroupStore).FindByIdentifier,
		(*database.UserGroupStore).Find,
		(*database.UserGroupStore).Map,
		(*database.UserGroupStore).FindManyByIDs,
		(*database.UserGroupStore).FindManyByIdentifiersAndSpaceID,
		(*database.UserGroupStore).Create,
		(*database.UserGroupStore).CreateOrUpdate,
		database.NewUsergroupReviewerStore,
		(*database.UsergroupReviewerStore).Create,
		(*database.UsergroupReviewerStore).Delete,
		(*database.UsergroupReviewerStore).List,
		(*database.UsergroupReviewerStore).Find,
		database.NewWebhookStore,
		(*database.WebhookStore).Find,
		(*database.WebhookStore).FindByIdentifier,
		(*database.WebhookStore).Create,
		(*database.WebhookStore).Update,
		(*database.WebhookStore).UpdateOptLock,
		(*database.WebhookStore).Delete,
		(*database.WebhookStore).DeleteByIdentifier,
		(*database.WebhookStore).Count,
		(*database.WebhookStore).List,
		database.NewWebhookExecutionStore,
		(*database.WebhookExecutionStore).Find,
		(*database.WebhookExecutionStore).Create,
		(*database.WebhookExecutionStore).DeleteOld,
		(*database.WebhookExecutionStore).ListForWebhook,
		(*database.WebhookExecutionStore).CountForWebhook,
		(*database.WebhookExecutionStore).ListForTrigger,
		database.ProvideDatabase,
		database.ProvidePrincipalStore,
		database.ProvideUserGroupStore,
		database.ProvideUserGroupReviewerStore,
		database.ProvidePrincipalInfoView,
		database.ProvideInfraProviderResourceView,
		database.ProvideSpacePathStore,
		database.ProvideSpaceStore,
		database.ProvideRepoStore,
		database.ProvideRuleStore,
		database.ProvideJobStore,
		database.ProvidePipelineStore,
		database.ProvideInfraProviderConfigStore,
		database.ProvideInfraProviderResourceStore,
		database.ProvideGitspaceConfigStore,
		database.ProvideGitspaceInstanceStore,
		database.ProvideStageStore,
		database.ProvideStepStore,
		database.ProvideSecretStore,
		database.ProvideConnectorStore,
		database.ProvideTemplateStore,
		database.ProvideTriggerStore,
		database.ProvideExecutionStore,
		database.ProvidePluginStore,
		database.ProvideRepoGitInfoView,
		database.ProvideMembershipStore,
		database.ProvideTokenStore,
		database.ProvidePullReqStore,
		database.ProvidePullReqActivityStore,
		database.ProvideCodeCommentView,
		database.ProvidePullReqReviewStore,
		database.ProvidePullReqReviewerStore,
		database.ProvidePullReqFileViewStore,
		database.ProvideWebhookStore,
		database.ProvideWebhookExecutionStore,
		database.ProvideCheckStore,
		database.ProvideSettingsStore,
		database.ProvidePublicAccessStore,
		database.ProvidePublicKeyStore,
		database.ProvideGitspaceEventStore,
		database.ProvideLabelStore,
		database.ProvideLabelValueStore,
		database.ProvidePullReqLabelStore,
		database.ProvideInfraProviderTemplateStore,
		database.ProvideInfraProvisionedStore,
		database.ProvideUsageMetricStore,
		store.ToLowerPrincipalUIDTransformation,
		store.ToLowerSpacePathTransformation,
		store.ProvidePathTransformation,
		store.ProvidePrincipalUIDTransformation,
		token.CreateUserWithAccessPermissions,
		token.CreateUserSession,
		token.CreatePAT,
		token.CreateSAT,
		url.NewProvider,
		url.BuildGITCloneSSHURL,
		url.ProvideURLProvider,
		(audit.Action).Validate,
		(audit.ResourceType).Validate,
		audit.NewResource,
		(audit.Resource).Validate,
		(audit.Resource).DataAsSlice,
		(*audit.Event).Validate,
		audit.New,
		(*audit.Noop).Log,
		(audit.FuncOption).Apply,
		audit.WithID,
		audit.WithNewObject,
		audit.WithOldObject,
		audit.WithClientIP,
		audit.WithRequestMethod,
		audit.WithData,
		audit.GetRealIP,
		audit.GetPath,
		audit.GetRequestID,
		audit.GetRequestMethod,
		audit.Middleware,
		audit.ProvideAuditService,
		blob.NewFileSystemStore,
		(blob.FileSystemStore).Upload,
		(blob.FileSystemStore).GetSignedURL,
		(*blob.FileSystemStore).Download,
		blob.NewGCSStore,
		(*blob.GCSStore).Upload,
		(*blob.GCSStore).GetSignedURL,
		(*blob.GCSStore).Download,
		blob.ProvideStore,
		cli.GetArguments,
		hooks.Register,
		swagger.Register,
		session.New,
		(session.Session).Store,
		(session.Session).SetURI,
		(session.Session).SetExpiresAt,
		(session.Session).SetAccessToken,
		(session.Session).Path,
		textui.Registration,
		textui.Credentials,
		textui.UserID,
		textui.LoginIdentifier,
		textui.DisplayName,
		textui.Email,
		textui.Password,
		client.New,
		client.NewToken,
		(*client.HTTPClient).SetClient,
		(*client.HTTPClient).SetDebug,
		(*client.HTTPClient).Login,
		(*client.HTTPClient).Register,
		(*client.HTTPClient).Self,
		(*client.HTTPClient).UserCreatePAT,
		(*client.HTTPClient).User,
		(*client.HTTPClient).UserList,
		(*client.HTTPClient).UserCreate,
		(*client.HTTPClient).UserUpdate,
		(*client.HTTPClient).UserDelete,
		contextutil.WithNewValues,
		crypto.GenerateHMACSHA256,
		crypto.IsShaEqual,
		(*encrypt.Aesgcm).Encrypt,
		(*encrypt.Aesgcm).Decrypt,
		encrypt.New,
		encrypt.ProvideEncrypter,
		(*errors.Error).SetErr,
		(*errors.Error).SetDetails,
		(*errors.Error).Unwrap,
		(*errors.Error).Error,
		errors.AsStatus,
		errors.Message,
		errors.Details,
		errors.AsError,
		errors.Format,
		errors.NotFound,
		errors.InvalidArgument,
		errors.Internal,
		errors.Conflict,
		errors.PreconditionFailed,
		errors.Unauthorized,
		errors.Forbidden,
		errors.Failed,
		errors.Aborted,
		errors.IsNotFound,
		errors.IsConflict,
		errors.IsInvalidArgument,
		errors.IsInternal,
		errors.IsPreconditionFailed,
		errors.IsAborted,
		errors.New,
		errors.Is,
		errors.As,
		events.NewReaderFactory,
		events.NewReporter,
		genai.GenerateAIContext,
		(genai.PipelineContext).GetName,
		(genai.PipelineContext).GetType,
		(genai.StepContext).GetName,
		(genai.StepContext).GetType,
		(genai.RepoRef).GetName,
		(genai.RepoRef).GetType,
		foreachref.NewFormat,
		(foreachref.Format).Flag,
		(foreachref.Format).Parser,
		foreachref.NewParser,
		(*foreachref.Parser).Next,
		(*foreachref.Parser).Err,
		(*git.BlameParams).Validate,
		(*git.Service).Blame,
		(*git.Service).GetBlob,
		(*git.Service).CreateBranch,
		(*git.Service).GetBranch,
		(*git.Service).DeleteBranch,
		(*git.Service).ListBranches,
		command.New,
		(*command.Command).Clone,
		(*command.Command).Add,
		(*command.Command).Run,
		(command.Envs).Args,
		command.NewError,
		(*command.Error).ExitCode,
		(*command.Error).IsExitCode,
		(*command.Error).IsAmbiguousArgErr,
		(*command.Error).IsInvalidRefErr,
		(*command.Error).Error,
		(*command.Error).Unwrap,
		command.AsError,
		command.WithGlobal,
		command.WithAction,
		command.WithFlag,
		command.WithArg,
		command.WithPostSepArg,
		command.WithEnv,
		command.WithCommitter,
		command.WithCommitterAndDate,
		command.WithAuthor,
		command.WithAuthorAndDate,
		command.WithConfig,
		command.WithAlternateObjectDirs,
		command.WithDir,
		command.WithStdin,
		command.WithStdout,
		command.WithStderr,
		command.WithEnvs,
		command.Parse,
		git.CommitMessage,
		(*git.Identity).Validate,
		(*git.Service).GetCommit,
		(*git.Service).ListCommits,
		(*git.Service).GetCommitDivergences,
		(*git.Service).FindOversizeFiles,
		(git.ReadParams).Validate,
		(*git.WriteParams).Validate,
		git.RequestIDFrom,
		git.WithRequestID,
		(*diff.Section).NumLines,
		(*diff.Section).Line,
		(*diff.File).Status,
		(*diff.File).NumSections,
		(*diff.File).NumAdditions,
		(*diff.File).NumChanges,
		(*diff.File).NumDeletions,
		(*diff.File).Mode,
		(*diff.File).OldMode,
		(*diff.File).IsEmpty,
		(*diff.Parser).Parse,
		diff.UnescapeChars,
		(git.DiffParams).Validate,
		(*git.Service).RawDiff,
		(*git.Service).CommitDiff,
		(*git.Service).DiffShortStat,
		(*git.Service).DiffStats,
		(*git.Service).GetDiffHunkHeaders,
		(*git.Service).DiffCut,
		(*git.Service).Diff,
		(*git.Service).DiffFileNames,
		(enum.MergeMethod).Sanitize,
		(enum.RefType).String,
		git.CreateEnvironmentForPush,
		hash.SerializeReference,
		hash.SerializeHead,
		hash.New,
		(hash.SourceFunc).Next,
		hash.SourceFromSlice,
		hash.SourceFromChannel,
		hook.SanitizeArgsForGit,
		hook.RegisterAll,
		hook.RegisterPreReceive,
		hook.RegisterUpdate,
		hook.RegisterPostReceive,
		hook.NewCLICore,
		(*hook.CLICore).PreReceive,
		(*hook.CLICore).Update,
		(*hook.CLICore).PostReceive,
		hook.EnvVarsToMap,
		hook.NewNoopClient,
		(*hook.NoopClient).PreReceive,
		(*hook.NoopClient).Update,
		(*hook.NoopClient).PostReceive,
		hook.GenerateEnvironmentVariables,
		hook.CreateRefUpdater,
		(*hook.RefUpdater).Do,
		(*hook.RefUpdater).Init,
		(*hook.RefUpdater).InitOld,
		(*hook.RefUpdater).InitNew,
		(*hook.RefUpdater).Pre,
		(*hook.RefUpdater).UpdateRef,
		(*hook.RefUpdater).Post,
		(*git.HunkHeader).IsZero,
		(*git.HunkHeader).IsValid,
		(*git.HunkHeader).String,
		(*git.Service).MatchFiles,
		merge.FindConflicts,
		merge.CommitCount,
		merge.Merge,
		merge.Squash,
		merge.Rebase,
		merge.FastForward,
		(*git.MergeParams).Validate,
		(*git.Service).Merge,
		(*git.MergeBaseParams).Validate,
		(*git.Service).MergeBase,
		(*git.Service).IsAncestor,
		(git.FileAction).Enum,
		(*git.CommitFilesParams).Validate,
		(*git.Service).CommitFiles,
		git.CreateReadParams,
		parser.CleanUpWhitespace,
		parser.ExtractSubject,
		parser.SplitMessage,
		parser.DiffCut,
		parser.BlobCut,
		parser.LimitLineLen,
		parser.ParseDiffFileHeader,
		parser.GetHunkHeaders,
		parser.ParseDiffFileExtendedHeader,
		parser.DiffExtHeaderParseIndex,
		(parser.DiffStatus).String,
		parser.DiffRaw,
		parser.CatFileBatchCheckAllObjects,
		(*parser.HunkHeader).IsZero,
		(*parser.HunkHeader).IsValid,
		(*parser.HunkHeader).String,
		parser.ParseDiffHunkHeader,
		parser.ScanZeroSeparated,
		parser.ScanLinesWithEOF,
		parser.NewScannerWithPeek,
		(*parser.ScannerWithPeek).Peek,
		(*parser.ScannerWithPeek).Scan,
		(*parser.ScannerWithPeek).Err,
		(*parser.ScannerWithPeek).Bytes,
		(*parser.ScannerWithPeek).Text,
		parser.ReadTextFile,
		parser.HasLineEnding,
		parser.HasLineEndingLF,
		parser.HasLineEndingCRLF,
		(*git.Service).GeneratePipeline,
		(*git.PushRemoteParams).Validate,
		(*git.Service).PushRemote,
		(*git.GetRefParams).Validate,
		(*git.Service).GetRef,
		(*git.Service).UpdateRef,
		git.GetRefPath,
		(*git.CreateRepositoryParams).Validate,
		(*git.HashRepositoryParams).Validate,
		(*git.Service).CreateRepository,
		git.NewRepositoryUID,
		(*git.Service).DeleteRepository,
		(*git.Service).DeleteRepositoryBestEffort,
		(*git.Service).SyncRepository,
		(*git.Service).HashRepository,
		(*git.Service).GetRepositorySize,
		(*git.Service).GetDefaultBranch,
		(*git.Service).UpdateDefaultBranch,
		(*git.ArchiveParams).Validate,
		(*git.Service).Archive,
		(*git.Service).ScanSecrets,
		git.New,
		(*git.Service).GetInfoRefs,
		(*git.ServicePackParams).Validate,
		(*git.Service).ServicePack,
		sha.New,
		sha.NewOrEmpty,
		(sha.SHA).GobEncode,
		(*sha.SHA).GobDecode,
		(*sha.SHA).UnmarshalJSON,
		(sha.SHA).MarshalJSON,
		(sha.SHA).String,
		(sha.SHA).IsNil,
		(sha.SHA).IsEmpty,
		(sha.SHA).Equal,
		sha.Must,
		(sha.SHA).JSONSchema,
		sharedrepo.Run,
		sharedrepo.NewSharedRepo,
		(*sharedrepo.SharedRepo).Close,
		(*sharedrepo.SharedRepo).Init,
		(*sharedrepo.SharedRepo).Directory,
		(*sharedrepo.SharedRepo).SetDefaultIndex,
		(*sharedrepo.SharedRepo).SetIndex,
		(*sharedrepo.SharedRepo).ClearIndex,
		(*sharedrepo.SharedRepo).LsFiles,
		(*sharedrepo.SharedRepo).RemoveFilesFromIndex,
		(*sharedrepo.SharedRepo).WriteGitObject,
		(*sharedrepo.SharedRepo).GetTreeSHA,
		(*sharedrepo.SharedRepo).ShowFile,
		(*sharedrepo.SharedRepo).AddObjectToIndex,
		(*sharedrepo.SharedRepo).WriteTree,
		(*sharedrepo.SharedRepo).MergeTree,
		sharedrepo.CleanupMergeConflicts,
		(*sharedrepo.SharedRepo).CommitTree,
		(*sharedrepo.SharedRepo).CommitSHAsForRebase,
		(*sharedrepo.SharedRepo).MergeBase,
		(*sharedrepo.SharedRepo).CreateFile,
		(*sharedrepo.SharedRepo).UpdateFile,
		(*sharedrepo.SharedRepo).MoveFile,
		(*sharedrepo.SharedRepo).DeleteFile,
		(*sharedrepo.SharedRepo).PatchTextFile,
		(*sharedrepo.SharedRepo).MoveObjects,
		storage.NewLocalStore,
		(*storage.LocalStore).Save,
		storage.ProvideLocalStore,
		(*git.Service).GetSubmodule,
		(*git.Service).Summary,
		(*git.CreateCommitTagParams).Validate,
		(git.DeleteTagParams).Validate,
		(*git.Service).ListCommitTags,
		(*git.Service).CreateCommitTag,
		(*git.Service).DeleteTag,
		tempdir.CreateTemporaryPath,
		tempdir.RemoveTemporaryPath,
		(*git.Service).GetTreeNode,
		(*git.Service).ListTreeNodes,
		(*git.Service).ListPaths,
		(*git.Service).PathsDetails,
		git.ValidateCommitSHA,
		git.ProvideGITAdapter,
		git.ProvideService,
		http.NewServer,
		(*http.Server).ListenAndServe,
		(*http.Server).ListenAndServeMTLS,
		(*job.Definition).Validate,
		(job.State).Enum,
		(job.State).Sanitize,
		job.GetAllJobStates,
		(job.State).IsCompleted,
		job.NewExecutor,
		(*job.Executor).Register,
		job.FailProgress,
		job.DecodeStateChange,
		job.NewScheduler,
		(*job.Scheduler).Run,
		(*job.Scheduler).WaitJobsDone,
		(*job.Scheduler).CancelJob,
		(*job.Scheduler).RunJob,
		(*job.Scheduler).RunJobs,
		(*job.Scheduler).GetJobProgress,
		(*job.Scheduler).GetJobProgressForGroup,
		(*job.Scheduler).PurgeJobsByGroupID,
		(*job.Scheduler).PurgeJobByUID,
		(*job.Scheduler).AddRecurring,
		job.UID,
		job.ProvideExecutor,
		job.ProvideScheduler,
		livelog.NewMemory,
		livelog.ProvideLogStream,
		lock.NewError,
		(lock.Error).Error,
		lock.NewInMemory,
		(*lock.InMemory).NewMutex,
		(lock.OptionFunc).Apply,
		lock.WithNamespace,
		lock.WithExpiry,
		lock.WithTries,
		lock.WithRetryDelay,
		lock.WithRetryDelayFunc,
		lock.WithDriftFactor,
		lock.WithTimeoutFactor,
		lock.WithGenValueFunc,
		lock.WithValue,
		lock.NewRedis,
		(*lock.Redis).NewMutex,
		(*lock.RedisMutex).Key,
		(*lock.RedisMutex).Lock,
		(*lock.RedisMutex).Unlock,
		lock.SplitKey,
		lock.ProvideMutexManager,
		(*profiler.GCPProfiler).StartProfiling,
		(*profiler.NoopProfiler).StartProfiling,
		profiler.ParseType,
		profiler.New,
		pubsub.NewInMemory,
		(*pubsub.InMemory).Subscribe,
		(*pubsub.InMemory).Publish,
		(*pubsub.InMemory).Close,
		(pubsub.OptionFunc).Apply,
		pubsub.WithApp,
		pubsub.WithNamespace,
		pubsub.WithHealthCheckInterval,
		pubsub.WithSendTimeout,
		pubsub.WithSize,
		(pubsub.SubscribeOptionFunc).Apply,
		pubsub.WithTopics,
		pubsub.WithChannelNamespace,
		pubsub.WithChannelHealthCheckInterval,
		pubsub.WithChannelSendTimeout,
		pubsub.WithChannelSize,
		(pubsub.PublishOptionFunc).Apply,
		pubsub.WithPublishApp,
		pubsub.WithPublishNamespace,
		pubsub.NewRedis,
		(*pubsub.Redis).Subscribe,
		(*pubsub.Redis).Publish,
		(*pubsub.Redis).Close,
		pubsub.ProvidePubSub,
		metadata.GetArtifactMetadata,
		metadata.GetRegistryArtifactMetadata,
		metadata.GetTagMetadata,
		metadata.GetAllArtifactResponse,
		metadata.GetAllArtifactByRegistryResponse,
		metadata.GetAllArtifactLabelsResponse,
		metadata.GetAllArtifactVersionResponse,
		metadata.GetDockerArtifactDetails,
		metadata.GetHelmArtifactDetails,
		metadata.GetArtifactSummary,
		metadata.GetArtifactVersionSummary,
		(*metadata.APIController).GetRegistryRequestBaseInfo,
		(*metadata.APIController).GetRegistryRequestInfo,
		metadata.CreateVirtualRepositoryResponse,
		metadata.CreateUpstreamProxyResponseJSONResponse,
		metadata.CreateCleanupPolicyEntity,
		metadata.CreateCleanupPolicyResponse,
		metadata.NewAPIController,
		(*metadata.APIController).CreateRegistry,
		metadata.CreateRegistryEntity,
		(*metadata.APIController).CreateUpstreamProxyEntity,
		(*metadata.APIController).DeleteArtifact,
		(*metadata.APIController).DeleteArtifactVersion,
		(*metadata.APIController).DeleteRegistry,
		(*metadata.APIController).GetArtifactDetails,
		(*metadata.APIController).GetArtifactFiles,
		(*metadata.APIController).GetArtifactStats,
		(*metadata.APIController).GetArtifactStatsForSpace,
		(*metadata.APIController).GetArtifactStatsForRegistry,
		(*metadata.APIController).GetAllArtifacts,
		(*metadata.APIController).GetDockerArtifactDetails,
		(*metadata.APIController).GetDockerArtifactLayers,
		metadata.GetSizeString,
		(*metadata.APIController).GetDockerArtifactManifest,
		(*metadata.APIController).GetDockerArtifactManifests,
		(*metadata.APIController).ProcessManifest,
		(*metadata.APIController).GetHelmArtifactDetails,
		(*metadata.APIController).GetHelmArtifactManifest,
		(*metadata.APIController).ListArtifactLabels,
		(*metadata.APIController).GetArtifactSummary,
		(*metadata.APIController).GetArtifactVersionSummary,
		(*metadata.APIController).FetchArtifactSummary,
		(*metadata.APIController).GetAllArtifactVersions,
		(*metadata.APIController).GetClientSetupDetails,
		(*metadata.APIController).GenerateClientSetupDetails,
		(*metadata.APIController).GetAllRegistries,
		metadata.GetAllRegistryResponse,
		metadata.GetRegistryMetadata,
		(*metadata.APIController).GetRegistry,
		(*metadata.APIController).GetAllArtifactsByRegistry,
		(*metadata.APIController).UpdateArtifactLabels,
		metadata.AttachLabels,
		(*metadata.APIController).ModifyRegistry,
		metadata.UpdateRepoEntity,
		(*metadata.APIController).UpdateUpstreamProxyEntity,
		metadata.ValidatePackageTypes,
		metadata.ValidatePackageType,
		metadata.ValidatePackageTypeChange,
		metadata.ValidateRepoTypeChange,
		metadata.ValidateIdentifierChange,
		metadata.ValidateIdentifier,
		metadata.ValidateUpstream,
		metadata.ValidateRepoType,
		metadata.ValidateUpstreamSource,
		metadata.IsRepoTypeValid,
		metadata.IsUpstreamSourceValid,
		metadata.IsPackageTypeValid,
		metadata.IsPackageTypesValid,
		metadata.GetTimeInMs,
		metadata.GetErrorResponse,
		metadata.GetSortByOrder,
		metadata.GetSortByField,
		metadata.GetPageLimit,
		metadata.GetOffset,
		metadata.GetPageNumber,
		metadata.GetSuccessResponse,
		metadata.GetPageCount,
		metadata.GetImageSize,
		metadata.GetSize,
		metadata.GetRegistryRef,
		metadata.GetRepoURLWithoutProtocol,
		metadata.GetTagURL,
		metadata.GetPullCommand,
		metadata.GetDockerPullCommand,
		metadata.GetHelmPullCommand,
		metadata.CleanURLPath,
		metadata.GetPermissionChecks,
		maven.NewHandler,
		(*maven.Handler).GetArtifactInfo,
		maven.ExtractPathVars,
		maven.LogError,
		(*maven.Handler).GetArtifact,
		(*maven.Handler).HeadArtifact,
		(*maven.Handler).PutArtifact,
		oci.NewHandler,
		oci.ExtractPathVars,
		(*oci.Handler).GetRegistryInfo,
		(*oci.Handler).DeleteBlob,
		(*oci.Handler).CancelBlobUpload,
		(*oci.Handler).DeleteManifest,
		(*oci.Handler).APIBase,
		(*oci.Handler).GetBlob,
		(*oci.Handler).GetUploadBlobStatus,
		(*oci.Handler).GetCatalog,
		(*oci.Handler).GetManifest,
		(*oci.Handler).GetReferrers,
		(*oci.Handler).GetTags,
		(*oci.Handler).GetToken,
		oci.GetRequestedResourceActions,
		(*oci.Handler).HeadBlob,
		(*oci.Handler).HeadManifest,
		(*oci.Handler).PatchBlobUpload,
		(*oci.Handler).InitiateUploadBlob,
		(*oci.Handler).CompleteBlobUpload,
		(*oci.Handler).PutManifest,
		middleware.OciCheckAuth,
		middleware.BlockNonOciSourceToken,
		middleware.CheckAuth,
		middleware.CheckMavenAuth,
		(*middleware.StatusWriter).WriteHeader,
		(*middleware.StatusWriter).Write,
		middleware.TrackBandwidthStat,
		middleware.TrackDownloadStat,
		middleware.StoreOriginalURL,
		(artifact.Unimplemented).CreateRegistry,
		(artifact.Unimplemented).DeleteRegistry,
		(artifact.Unimplemented).GetRegistry,
		(artifact.Unimplemented).ModifyRegistry,
		(artifact.Unimplemented).ListArtifactLabels,
		(artifact.Unimplemented).GetArtifactStatsForRegistry,
		(artifact.Unimplemented).DeleteArtifact,
		(artifact.Unimplemented).UpdateArtifactLabels,
		(artifact.Unimplemented).GetArtifactStats,
		(artifact.Unimplemented).GetArtifactSummary,
		(artifact.Unimplemented).DeleteArtifactVersion,
		(artifact.Unimplemented).GetArtifactDetails,
		(artifact.Unimplemented).GetDockerArtifactDetails,
		(artifact.Unimplemented).GetDockerArtifactLayers,
		(artifact.Unimplemented).GetDockerArtifactManifest,
		(artifact.Unimplemented).GetDockerArtifactManifests,
		(artifact.Unimplemented).GetArtifactFiles,
		(artifact.Unimplemented).GetHelmArtifactDetails,
		(artifact.Unimplemented).GetHelmArtifactManifest,
		(artifact.Unimplemented).GetArtifactVersionSummary,
		(artifact.Unimplemented).GetAllArtifactVersions,
		(artifact.Unimplemented).GetAllArtifactsByRegistry,
		(artifact.Unimplemented).GetClientSetupDetails,
		(artifact.Unimplemented).GetArtifactStatsForSpace,
		(artifact.Unimplemented).GetAllArtifacts,
		(artifact.Unimplemented).GetAllRegistries,
		(*artifact.ServerInterfaceWrapper).CreateRegistry,
		(*artifact.ServerInterfaceWrapper).DeleteRegistry,
		(*artifact.ServerInterfaceWrapper).GetRegistry,
		(*artifact.ServerInterfaceWrapper).ModifyRegistry,
		(*artifact.ServerInterfaceWrapper).ListArtifactLabels,
		(*artifact.ServerInterfaceWrapper).GetArtifactStatsForRegistry,
		(*artifact.ServerInterfaceWrapper).DeleteArtifact,
		(*artifact.ServerInterfaceWrapper).UpdateArtifactLabels,
		(*artifact.ServerInterfaceWrapper).GetArtifactStats,
		(*artifact.ServerInterfaceWrapper).GetArtifactSummary,
		(*artifact.ServerInterfaceWrapper).DeleteArtifactVersion,
		(*artifact.ServerInterfaceWrapper).GetArtifactDetails,
		(*artifact.ServerInterfaceWrapper).GetDockerArtifactDetails,
		(*artifact.ServerInterfaceWrapper).GetDockerArtifactLayers,
		(*artifact.ServerInterfaceWrapper).GetDockerArtifactManifest,
		(*artifact.ServerInterfaceWrapper).GetDockerArtifactManifests,
		(*artifact.ServerInterfaceWrapper).GetArtifactFiles,
		(*artifact.ServerInterfaceWrapper).GetHelmArtifactDetails,
		(*artifact.ServerInterfaceWrapper).GetHelmArtifactManifest,
		(*artifact.ServerInterfaceWrapper).GetArtifactVersionSummary,
		(*artifact.ServerInterfaceWrapper).GetAllArtifactVersions,
		(*artifact.ServerInterfaceWrapper).GetAllArtifactsByRegistry,
		(*artifact.ServerInterfaceWrapper).GetClientSetupDetails,
		(*artifact.ServerInterfaceWrapper).GetArtifactStatsForSpace,
		(*artifact.ServerInterfaceWrapper).GetAllArtifacts,
		(*artifact.ServerInterfaceWrapper).GetAllRegistries,
		(*artifact.UnescapedCookieParamError).Error,
		(*artifact.UnescapedCookieParamError).Unwrap,
		(*artifact.UnmarshalingParamError).Error,
		(*artifact.UnmarshalingParamError).Unwrap,
		(*artifact.RequiredParamError).Error,
		(*artifact.RequiredHeaderError).Error,
		(*artifact.RequiredHeaderError).Unwrap,
		(*artifact.InvalidParamFormatError).Error,
		(*artifact.InvalidParamFormatError).Unwrap,
		(*artifact.TooManyValuesForParamError).Error,
		artifact.Handler,
		artifact.HandlerFromMux,
		artifact.HandlerFromMuxWithBaseURL,
		artifact.HandlerWithOptions,
		(artifact.CreateRegistry201JSONResponse).VisitCreateRegistryResponse,
		(artifact.CreateRegistry400JSONResponse).VisitCreateRegistryResponse,
		(artifact.CreateRegistry401JSONResponse).VisitCreateRegistryResponse,
		(artifact.CreateRegistry403JSONResponse).VisitCreateRegistryResponse,
		(artifact.CreateRegistry500JSONResponse).VisitCreateRegistryResponse,
		(artifact.DeleteRegistry200JSONResponse).VisitDeleteRegistryResponse,
		(artifact.DeleteRegistry400JSONResponse).VisitDeleteRegistryResponse,
		(artifact.DeleteRegistry401JSONResponse).VisitDeleteRegistryResponse,
		(artifact.DeleteRegistry403JSONResponse).VisitDeleteRegistryResponse,
		(artifact.DeleteRegistry404JSONResponse).VisitDeleteRegistryResponse,
		(artifact.DeleteRegistry500JSONResponse).VisitDeleteRegistryResponse,
		(artifact.GetRegistry200JSONResponse).VisitGetRegistryResponse,
		(artifact.GetRegistry400JSONResponse).VisitGetRegistryResponse,
		(artifact.GetRegistry401JSONResponse).VisitGetRegistryResponse,
		(artifact.GetRegistry403JSONResponse).VisitGetRegistryResponse,
		(artifact.GetRegistry404JSONResponse).VisitGetRegistryResponse,
		(artifact.GetRegistry500JSONResponse).VisitGetRegistryResponse,
		(artifact.ModifyRegistry200JSONResponse).VisitModifyRegistryResponse,
		(artifact.ModifyRegistry400JSONResponse).VisitModifyRegistryResponse,
		(artifact.ModifyRegistry401JSONResponse).VisitModifyRegistryResponse,
		(artifact.ModifyRegistry403JSONResponse).VisitModifyRegistryResponse,
		(artifact.ModifyRegistry404JSONResponse).VisitModifyRegistryResponse,
		(artifact.ModifyRegistry500JSONResponse).VisitModifyRegistryResponse,
		(artifact.ListArtifactLabels200JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.ListArtifactLabels400JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.ListArtifactLabels401JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.ListArtifactLabels403JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.ListArtifactLabels404JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.ListArtifactLabels500JSONResponse).VisitListArtifactLabelsResponse,
		(artifact.GetArtifactStatsForRegistry200JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.GetArtifactStatsForRegistry400JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.GetArtifactStatsForRegistry401JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.GetArtifactStatsForRegistry403JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.GetArtifactStatsForRegistry404JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.GetArtifactStatsForRegistry500JSONResponse).VisitGetArtifactStatsForRegistryResponse,
		(artifact.DeleteArtifact200JSONResponse).VisitDeleteArtifactResponse,
		(artifact.DeleteArtifact400JSONResponse).VisitDeleteArtifactResponse,
		(artifact.DeleteArtifact401JSONResponse).VisitDeleteArtifactResponse,
		(artifact.DeleteArtifact403JSONResponse).VisitDeleteArtifactResponse,
		(artifact.DeleteArtifact404JSONResponse).VisitDeleteArtifactResponse,
		(artifact.DeleteArtifact500JSONResponse).VisitDeleteArtifactResponse,
		(artifact.UpdateArtifactLabels200JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.UpdateArtifactLabels400JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.UpdateArtifactLabels401JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.UpdateArtifactLabels403JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.UpdateArtifactLabels404JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.UpdateArtifactLabels500JSONResponse).VisitUpdateArtifactLabelsResponse,
		(artifact.GetArtifactStats200JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactStats400JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactStats401JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactStats403JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactStats404JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactStats500JSONResponse).VisitGetArtifactStatsResponse,
		(artifact.GetArtifactSummary200JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.GetArtifactSummary400JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.GetArtifactSummary401JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.GetArtifactSummary403JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.GetArtifactSummary404JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.GetArtifactSummary500JSONResponse).VisitGetArtifactSummaryResponse,
		(artifact.DeleteArtifactVersion200JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.DeleteArtifactVersion400JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.DeleteArtifactVersion401JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.DeleteArtifactVersion403JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.DeleteArtifactVersion404JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.DeleteArtifactVersion500JSONResponse).VisitDeleteArtifactVersionResponse,
		(artifact.GetArtifactDetails200JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetArtifactDetails400JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetArtifactDetails401JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetArtifactDetails403JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetArtifactDetails404JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetArtifactDetails500JSONResponse).VisitGetArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails200JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails400JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails401JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails403JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails404JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactDetails500JSONResponse).VisitGetDockerArtifactDetailsResponse,
		(artifact.GetDockerArtifactLayers200JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactLayers400JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactLayers401JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactLayers403JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactLayers404JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactLayers500JSONResponse).VisitGetDockerArtifactLayersResponse,
		(artifact.GetDockerArtifactManifest200JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifest400JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifest401JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifest403JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifest404JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifest500JSONResponse).VisitGetDockerArtifactManifestResponse,
		(artifact.GetDockerArtifactManifests200JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetDockerArtifactManifests400JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetDockerArtifactManifests401JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetDockerArtifactManifests403JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetDockerArtifactManifests404JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetDockerArtifactManifests500JSONResponse).VisitGetDockerArtifactManifestsResponse,
		(artifact.GetArtifactFiles200JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetArtifactFiles400JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetArtifactFiles401JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetArtifactFiles403JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetArtifactFiles404JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetArtifactFiles500JSONResponse).VisitGetArtifactFilesResponse,
		(artifact.GetHelmArtifactDetails200JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactDetails400JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactDetails401JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactDetails403JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactDetails404JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactDetails500JSONResponse).VisitGetHelmArtifactDetailsResponse,
		(artifact.GetHelmArtifactManifest200JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetHelmArtifactManifest400JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetHelmArtifactManifest401JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetHelmArtifactManifest403JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetHelmArtifactManifest404JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetHelmArtifactManifest500JSONResponse).VisitGetHelmArtifactManifestResponse,
		(artifact.GetArtifactVersionSummary200JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetArtifactVersionSummary400JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetArtifactVersionSummary401JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetArtifactVersionSummary403JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetArtifactVersionSummary404JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetArtifactVersionSummary500JSONResponse).VisitGetArtifactVersionSummaryResponse,
		(artifact.GetAllArtifactVersions200JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactVersions400JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactVersions401JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactVersions403JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactVersions404JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactVersions500JSONResponse).VisitGetAllArtifactVersionsResponse,
		(artifact.GetAllArtifactsByRegistry200JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetAllArtifactsByRegistry400JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetAllArtifactsByRegistry401JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetAllArtifactsByRegistry403JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetAllArtifactsByRegistry404JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetAllArtifactsByRegistry500JSONResponse).VisitGetAllArtifactsByRegistryResponse,
		(artifact.GetClientSetupDetails200JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetClientSetupDetails400JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetClientSetupDetails401JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetClientSetupDetails403JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetClientSetupDetails404JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetClientSetupDetails500JSONResponse).VisitGetClientSetupDetailsResponse,
		(artifact.GetArtifactStatsForSpace200JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetArtifactStatsForSpace400JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetArtifactStatsForSpace401JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetArtifactStatsForSpace403JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetArtifactStatsForSpace404JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetArtifactStatsForSpace500JSONResponse).VisitGetArtifactStatsForSpaceResponse,
		(artifact.GetAllArtifacts200JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllArtifacts400JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllArtifacts401JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllArtifacts403JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllArtifacts404JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllArtifacts500JSONResponse).VisitGetAllArtifactsResponse,
		(artifact.GetAllRegistries200JSONResponse).VisitGetAllRegistriesResponse,
		(artifact.GetAllRegistries400JSONResponse).VisitGetAllRegistriesResponse,
		(artifact.GetAllRegistries401JSONResponse).VisitGetAllRegistriesResponse,
		(artifact.GetAllRegistries403JSONResponse).VisitGetAllRegistriesResponse,
		(artifact.GetAllRegistries404JSONResponse).VisitGetAllRegistriesResponse,
		(artifact.GetAllRegistries500JSONResponse).VisitGetAllRegistriesResponse,
		artifact.NewStrictHandler,
		artifact.NewStrictHandlerWithOptions,
		artifact.PathToRawSpec,
		artifact.GetSwagger,
		(artifact.ArtifactDetail).AsDockerArtifactDetailConfig,
		(*artifact.ArtifactDetail).FromDockerArtifactDetailConfig,
		(*artifact.ArtifactDetail).MergeDockerArtifactDetailConfig,
		(artifact.ArtifactDetail).AsHelmArtifactDetailConfig,
		(*artifact.ArtifactDetail).FromHelmArtifactDetailConfig,
		(*artifact.ArtifactDetail).MergeHelmArtifactDetailConfig,
		(artifact.ArtifactDetail).AsGenericArtifactDetailConfig,
		(*artifact.ArtifactDetail).FromGenericArtifactDetailConfig,
		(*artifact.ArtifactDetail).MergeGenericArtifactDetailConfig,
		(artifact.ArtifactDetail).AsMavenArtifactDetailConfig,
		(*artifact.ArtifactDetail).FromMavenArtifactDetailConfig,
		(*artifact.ArtifactDetail).MergeMavenArtifactDetailConfig,
		(artifact.ArtifactDetail).Discriminator,
		(artifact.ArtifactDetail).ValueByDiscriminator,
		(artifact.ArtifactDetail).MarshalJSON,
		(*artifact.ArtifactDetail).UnmarshalJSON,
		(artifact.RegistryConfig).AsVirtualConfig,
		(*artifact.RegistryConfig).FromVirtualConfig,
		(*artifact.RegistryConfig).MergeVirtualConfig,
		(artifact.RegistryConfig).AsUpstreamConfig,
		(*artifact.RegistryConfig).FromUpstreamConfig,
		(*artifact.RegistryConfig).MergeUpstreamConfig,
		(artifact.RegistryConfig).Discriminator,
		(artifact.RegistryConfig).ValueByDiscriminator,
		(artifact.RegistryConfig).MarshalJSON,
		(*artifact.RegistryConfig).UnmarshalJSON,
		(artifact.UpstreamConfig_Auth).AsUserPassword,
		(*artifact.UpstreamConfig_Auth).FromUserPassword,
		(*artifact.UpstreamConfig_Auth).MergeUserPassword,
		(artifact.UpstreamConfig_Auth).AsAnonymous,
		(*artifact.UpstreamConfig_Auth).FromAnonymous,
		(*artifact.UpstreamConfig_Auth).MergeAnonymous,
		(artifact.UpstreamConfig_Auth).AsAccessKeySecretKey,
		(*artifact.UpstreamConfig_Auth).FromAccessKeySecretKey,
		(*artifact.UpstreamConfig_Auth).MergeAccessKeySecretKey,
		(artifact.UpstreamConfig_Auth).MarshalJSON,
		(*artifact.UpstreamConfig_Auth).UnmarshalJSON,
		harness.NewAPIHandler,
		(*errors.Error).Error,
		(*errors.Error).Unwrap,
		(*lib.Link).String,
		(lib.Links).String,
		lib.ParseLinks,
		common.GenerateOciTokenURL,
		common.GenerateSetupClientHostnameAndRegistry,
		common.GetHost,
		common.GetHostName,
		common.TrimURLScheme,
		common.ExtractFirstQueryParams,
		dcontext.Background,
		dcontext.WithValues,
		dcontext.WithRequest,
		dcontext.GetRequestID,
		dcontext.WithResponseWriter,
		dcontext.GetResponseWriter,
		dcontext.WithVars,
		dcontext.GetResponseLogger,
		dcontext.WithLogger,
		dcontext.GetLoggerWithFields,
		dcontext.GetLogger,
		dcontext.WithTrace,
		dcontext.Since,
		dcontext.GetStringValue,
		dcontext.WithVersion,
		dcontext.GetVersion,
		(errcode.CodeError).ErrorCode,
		(errcode.CodeError).Error,
		(errcode.CodeError).Descriptor,
		(errcode.CodeError).String,
		(errcode.CodeError).Message,
		(errcode.CodeError).MarshalText,
		(*errcode.CodeError).UnmarshalText,
		(errcode.CodeError).WithMessage,
		(errcode.CodeError).WithDetail,
		(errcode.CodeError).WithArgs,
		(errcode.Error).ErrorCode,
		(errcode.Error).Error,
		(errcode.Error).WithDetail,
		(errcode.Error).WithArgs,
		errcode.ParseErrorCode,
		(errcode.Errors).Error,
		(errcode.Errors).Len,
		(errcode.Errors).MarshalJSON,
		(*errcode.Errors).UnmarshalJSON,
		errcode.ServeJSON,
		errcode.Register,
		errcode.GetGroupNames,
		errcode.GetErrorCodeGroup,
		errcode.GetErrorAllDescriptors,
		errcode.FromUnknownError,
		requestutil.RemoteAddr,
		requestutil.RemoteIP,
		(driver.FileInfoInternal).Path,
		(driver.FileInfoInternal).Size,
		(driver.FileInfoInternal).ModTime,
		(driver.FileInfoInternal).IsDir,
		filesystem.GetDriverName,
		filesystem.Register,
		filesystem.FromParameters,
		filesystem.New,
		s3.GetDriverName,
		s3.Register,
		s3.FromParameters,
		s3.New,
		(*s3.Driver).S3BucketKey,
		s3.Sign,
		(driver.Version).Major,
		(driver.Version).Minor,
		driver.WithStartAfterHint,
		(driver.UnsupportedMethodError).Error,
		(driver.PathNotFoundError).Error,
		(driver.InvalidPathError).Error,
		(driver.InvalidOffsetError).Error,
		(driver.Error).Error,
		(driver.Error).MarshalJSON,
		(driver.StorageDriverError).Error,
		(driver.StorageDriverError).MarshalJSON,
		driver.WalkFallback,
		event.GetPackageTypeFromString,
		(*event.Noop).ReportEvent,
		(manifest.TagUnknownError).Error,
		(manifest.RegistryUnknownError).Error,
		(manifest.RegistryNameInvalidError).Error,
		(manifest.UnknownError).Error,
		(manifest.UnknownRevisionError).Error,
		(manifest.UnverifiedError).Error,
		(manifest.ReferencesExceedLimitError).Error,
		(manifest.PayloadSizeExceedsLimitError).Error,
		(manifest.VerificationErrors).Error,
		(manifest.BlobUnknownError).Error,
		(manifest.NameInvalidError).Error,
		(manifestlist.ManifestList).References,
		manifestlist.FromDescriptors,
		(*manifestlist.DeserializedManifestList).UnmarshalJSON,
		(*manifestlist.DeserializedManifestList).MarshalJSON,
		(manifestlist.DeserializedManifestList).Payload,
		manifest.ManifestMediaTypes,
		manifest.UnmarshalManifest,
		manifest.RegisterManifestSchema,
		(ocischema.ImageIndex).References,
		ocischema.FromDescriptors,
		(*ocischema.DeserializedImageIndex).UnmarshalJSON,
		(*ocischema.DeserializedImageIndex).MarshalJSON,
		(ocischema.DeserializedImageIndex).Payload,
		(*ocischema.DeserializedImageIndex).ArtifactType,
		(*ocischema.DeserializedImageIndex).Subject,
		(*ocischema.DeserializedImageIndex).Annotations,
		(ocischema.Manifest).References,
		(ocischema.Manifest).Target,
		ocischema.FromStruct,
		(*ocischema.DeserializedManifest).UnmarshalJSON,
		(*ocischema.DeserializedManifest).MarshalJSON,
		(ocischema.DeserializedManifest).Payload,
		(*ocischema.DeserializedManifest).Version,
		(*ocischema.DeserializedManifest).Config,
		(*ocischema.DeserializedManifest).Layers,
		(*ocischema.DeserializedManifest).DistributableLayers,
		(*ocischema.DeserializedManifest).ArtifactType,
		(*ocischema.DeserializedManifest).Subject,
		(*ocischema.DeserializedManifest).Annotations,
		(*ocischema.DeserializedManifest).TotalSize,
		commons.IsEmpty,
		(*commons.ResponseHeaders).WriteToResponse,
		(*commons.ResponseHeaders).WriteHeadersToResponse,
		(*commons.Error).Error,
		commons.New,
		commons.NotFoundError,
		(*pkg.RegistryInfo).SetReference,
		(*pkg.ArtifactInfo).SetRepoKey,
		(*pkg.MavenArtifactInfo).SetMavenRepoKey,
		pkg.NewCoreController,
		(*pkg.CoreController).GetArtifact,
		(*pkg.CoreController).GetOrderedRepos,
		docker.NewApp,
		docker.GetStorageService,
		docker.LogError,
		(*docker.App).GetBlobsContext,
		docker.CreateLinkEntry,
		docker.EncodeFilter,
		docker.References,
		docker.LikelyBuildxCache,
		docker.ContainsBlobs,
		docker.OCIManifestFromBuildkitIndex,
		(*docker.Context).Value,
		docker.NewController,
		docker.NewDBStore,
		(*docker.Controller).ProxyWrapper,
		(*docker.Controller).HeadManifest,
		(*docker.Controller).PullManifest,
		(*docker.Controller).PutManifest,
		(*docker.Controller).DeleteManifest,
		(*docker.Controller).HeadBlob,
		(*docker.Controller).GetBlob,
		(*docker.Controller).InitiateUploadBlob,
		(*docker.Controller).GetUploadBlobStatus,
		(*docker.Controller).PatchBlobUpload,
		(*docker.Controller).CompleteBlobUpload,
		(*docker.Controller).CancelBlobUpload,
		(*docker.Controller).DeleteBlob,
		(*docker.Controller).GetTags,
		(*docker.Controller).GetCatalog,
		(*docker.Controller).GetReferrers,
		docker.ResumeBlobUpload,
		docker.NewLocalRegistry,
		(*docker.LocalRegistry).Base,
		(*docker.LocalRegistry).CanBeMount,
		(*docker.LocalRegistry).GetArtifactType,
		docker.DBManifestToManifest,
		(*docker.LocalRegistry).HeadBlob,
		(*docker.LocalRegistry).GetBlob,
		(*docker.LocalRegistry).PullManifest,
		(*docker.LocalRegistry).ManifestExist,
		(*docker.LocalRegistry).PutManifest,
		(*docker.LocalRegistry).PushBlobMonolith,
		(*docker.LocalRegistry).InitBlobUpload,
		(*docker.LocalRegistry).PushBlobMonolithWithDigest,
		(*docker.LocalRegistry).PushBlobChunk,
		(*docker.LocalRegistry).PushBlob,
		(*docker.LocalRegistry).ListTags,
		(*docker.LocalRegistry).ListFilteredTags,
		(*docker.LocalRegistry).DeleteManifest,
		(*docker.LocalRegistry).DeleteBlob,
		(*docker.LocalRegistry).MountBlob,
		(*docker.LocalRegistry).ListReferrers,
		(*docker.LocalRegistry).GetBlobUploadStatus,
		(*docker.LocalRegistry).GetCatalog,
		(*docker.LocalRegistry).DeleteTag,
		(*docker.LocalRegistry).PullBlobChunk,
		docker.NewManifestService,
		docker.NewRemoteRegistry,
		(*docker.RemoteRegistry).GetArtifactType,
		(*docker.RemoteRegistry).Base,
		(*docker.RemoteRegistry).ManifestExist,
		(*docker.RemoteRegistry).PullManifest,
		(*docker.RemoteRegistry).HeadBlob,
		(*docker.RemoteRegistry).GetBlob,
		(*docker.RemoteRegistry).PushBlobMonolith,
		(*docker.RemoteRegistry).InitBlobUpload,
		(*docker.RemoteRegistry).PushBlobMonolithWithDigest,
		(*docker.RemoteRegistry).PushBlobChunk,
		(*docker.RemoteRegistry).PushBlob,
		(*docker.RemoteRegistry).PutManifest,
		(*docker.RemoteRegistry).ListTags,
		(*docker.RemoteRegistry).ListFilteredTags,
		(*docker.RemoteRegistry).DeleteManifest,
		(*docker.RemoteRegistry).DeleteBlob,
		(*docker.RemoteRegistry).MountBlob,
		(*docker.RemoteRegistry).ListReferrers,
		(*docker.RemoteRegistry).GetBlobUploadStatus,
		(*docker.RemoteRegistry).GetCatalog,
		(*docker.RemoteRegistry).DeleteTag,
		(*docker.RemoteRegistry).PullBlobChunk,
		(*docker.RemoteRegistry).CanBeMount,
		(*docker.GetManifestResponse).GetErrors,
		(*docker.GetManifestResponse).SetError,
		(*docker.PutManifestResponse).GetErrors,
		(*docker.PutManifestResponse).SetError,
		(*docker.DeleteManifestResponse).GetErrors,
		(*docker.DeleteManifestResponse).SetError,
		(*docker.GetBlobResponse).GetErrors,
		(*docker.GetBlobResponse).SetError,
		docker.LocalRegistryProvider,
		docker.ManifestServiceProvider,
		docker.RemoteRegistryProvider,
		docker.ControllerProvider,
		docker.DBStoreProvider,
		docker.StorageServiceProvider,
		docker.ProvideReporter,
		docker.ProvideProxyController,
		filemanager.NewApp,
		(*filemanager.App).GetBlobsContext,
		(*filemanager.Context).Value,
		filemanager.NewFileManager,
		(*filemanager.FileManager).UploadFile,
		(*filemanager.FileManager).SaveNode,
		(*filemanager.FileManager).DownloadFile,
		(*filemanager.FileManager).DeleteFile,
		(*filemanager.FileManager).HeadFile,
		(*filemanager.FileManager).GetFileMetadata,
		filemanager.Provider,
		pkg.GetRegistryCheckAccess,
		pkg.IsEmpty,
		pkg.CoreControllerProvider,
		adapter.RegisterFactory,
		adapter.GetFactory,
		adapter.ListRegisteredAdapterTypes,
		awsecr.NewAuth,
		dockerhub.NewClient,
		(*dockerhub.Client).Do,
		native.NewAdapter,
		native.NewAdapterWithAuthorizer,
		(*native.Adapter).HealthCheck,
		(*native.Adapter).PingSimple,
		(*native.Adapter).DeleteTag,
		(*native.Adapter).CanBeMount,
		basic.NewAuthorizer,
		bearer.NewAuthorizer,
		null.NewAuthorizer,
		registry.NewClient,
		registry.NewClientWithAuthorizer,
		proxy.NewProxyController,
		proxy.ByteToReadCloser,
		proxy.GetManifestCache,
		proxy.GetManifestListCache,
		(*proxy.ManifestCache).CacheContent,
		(*proxy.ManifestListCache).CacheContent,
		proxy.NewRemoteHelper,
		(util.UnknownMediaTypeError).Error,
		util.StringToArr,
		util.ArrToString,
		util.Int64ArrToString,
		util.StringToInt64Arr,
		util.StringToArrByDelimiter,
		util.ArrToStringByDelimiter,
		util.Int64ArrToStringByDelimiter,
		util.StringToInt64ArrByDelimiter,
		util.GetSetDBKeys,
		util.GetDBTagsFromStruct,
		util.GetHexDecodedBytes,
		util.GetHexEncodedString,
		util.GetEmptySQLString,
		util.GetEmptySQLInt32,
		util.ConstructQuery,
		util.FormatQuery,
		migrations.Migrate,
		config.GetS3StorageParameters,
		config.GetFilesystemParams,
		gc.New,
		(*gc.Noop).Start,
		(*gc.Noop).BlobFindAndLockBefore,
		(*gc.Noop).BlobReschedule,
		(*gc.Noop).ManifestFindAndLockBefore,
		(*gc.Noop).ManifestFindAndLockNBefore,
		gc.StorageDeleterProvider,
		gc.ServiceProvider,
		types.NewZerologAdapter,				 
		(*types.ZerologAdapter).Info,				
		(*types.ZerologAdapter).Debug,				
		(*types.ZerologAdapter).Warn,				
		(*types.ZerologAdapter).Error,			
		resources.Licenses,
		resources.ReadLicense,
		resources.GitIgnores,
		resources.ReadGitIgnore,
		ssh.ChainMiddleware,
		ssh.PanicRecoverMiddleware,
		ssh.HLogAccessLogHandler,
		ssh.HLogRequestIDHandler,
		ssh.ChainPublicKeyMiddleware,
		ssh.LogPublicKeyMiddleware,
		(*ssh.Server).ListenAndServe,
		(*ssh.Server).Shutdown,
		ssh.CreateKeyIfNotExists,
		ssh.GenerateKeyPair,
		ssh.ProvideServer,
		dbtx.GetAccessor,
		dbtx.GetTransaction,
		dbtx.New,
		dbtx.ProvideAccessorTx,
		dbtx.ProvideAccessor,
		dbtx.ProvideTransactor,
		stream.NewMemoryBroker,
		stream.NewMemoryConsumer,
		(*stream.MemoryConsumer).Configure,
		(*stream.MemoryConsumer).Register,
		(*stream.MemoryConsumer).Start,
		(*stream.MemoryConsumer).Errors,
		(*stream.MemoryConsumer).Infos,
		stream.NewMemoryProducer,
		(*stream.MemoryProducer).Send,
		stream.WithConcurrency,
		stream.WithHandlerOptions,
		stream.WithMaxRetries,
		stream.WithIdleTimeout,
		stream.NewRedisConsumer,
		(*stream.RedisConsumer).Configure,
		(*stream.RedisConsumer).Register,
		(*stream.RedisConsumer).Start,
		(*stream.RedisConsumer).Errors,
		(*stream.RedisConsumer).Infos,
		stream.NewRedisProducer,
		(*stream.RedisProducer).Send,
		(enum.MergeMethod).Sanitize,
		
	}

	// rcv := receiver.GetReceiver(cobra.Command{})
	// rcv.SetReceiverValues()

	executor.ExecuteFuncs(funcs, nil, "feedback_directed", 0, 15, 10, executor.DebugOpts{Dump: true, Debug: false, UseSequenceHashMap: true, Iteration: iteration})
}
