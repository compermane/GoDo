package test

// instance, lv, ratemap

import (
	"flag"
	"os"
	"testing"

	"github.com/compermane/ic-go/pkg/domain/executor"
	"github.com/go-kit/kit/auth/basic"
	"github.com/go-kit/kit/auth/casbin"
	"github.com/go-kit/kit/auth/jwt"
	"github.com/go-kit/kit/circuitbreaker"
	"github.com/go-kit/kit/endpoint"
	"github.com/go-kit/kit/log"
	levels "github.com/go-kit/kit/log/deprecated_levels"
	"github.com/go-kit/kit/log/level"
	"github.com/go-kit/kit/log/logrus"
	"github.com/go-kit/kit/log/syslog"
	"github.com/go-kit/kit/log/term"
	"github.com/go-kit/kit/log/zap"
	"github.com/go-kit/kit/metrics"
	"github.com/go-kit/kit/metrics/cloudwatch"
	"github.com/go-kit/kit/metrics/cloudwatch2"
	"github.com/go-kit/kit/metrics/discard"
	"github.com/go-kit/kit/metrics/dogstatsd"
	"github.com/go-kit/kit/metrics/expvar"
	"github.com/go-kit/kit/metrics/generic"
	"github.com/go-kit/kit/metrics/graphite"
	"github.com/go-kit/kit/metrics/influx"
	"github.com/go-kit/kit/metrics/influxstatsd"
	"github.com/go-kit/kit/metrics/multi"
	"github.com/go-kit/kit/metrics/pcp"
	"github.com/go-kit/kit/metrics/prometheus"
	"github.com/go-kit/kit/metrics/provider"
	"github.com/go-kit/kit/metrics/statsd"
	"github.com/go-kit/kit/metrics/teststat"
	"github.com/go-kit/kit/ratelimit"
	"github.com/go-kit/kit/sd"
	"github.com/go-kit/kit/sd/consul"
	"github.com/go-kit/kit/sd/dnssrv"
	"github.com/go-kit/kit/sd/etcd"
	"github.com/go-kit/kit/sd/etcdv3"
	"github.com/go-kit/kit/sd/eureka"
	"github.com/go-kit/kit/sd/lb"
	"github.com/go-kit/kit/sd/zk"
	"github.com/go-kit/kit/tracing/opencensus"
	"github.com/go-kit/kit/tracing/opentracing"
	"github.com/go-kit/kit/tracing/zipkin"
	"github.com/go-kit/kit/transport"
	"github.com/go-kit/kit/transport/amqp"
	"github.com/go-kit/kit/transport/awslambda"
	"github.com/go-kit/kit/transport/grpc"
	test "github.com/go-kit/kit/transport/grpc/_grpc_test"
	"github.com/go-kit/kit/transport/grpc/_grpc_test/pb"
	"github.com/go-kit/kit/transport/http"
	"github.com/go-kit/kit/transport/http/jsonrpc"
	"github.com/go-kit/kit/transport/http/proto"
	"github.com/go-kit/kit/transport/httprp"
	"github.com/go-kit/kit/transport/nats"
	"github.com/go-kit/kit/util/conn"
)

var iteration int

func TestMain(m *testing.M) {
	flag.IntVar(&iteration, "iteration", 1000, "Iteração do algoritmo (benchmarking)",)
	flag.Parse()

	code := m.Run()
	os.Exit(code)

}

func TestGodo(t *testing.T) {

	funcs := []any{
		(basic.AuthError).StatusCode,
		(basic.AuthError).Error,
		(basic.AuthError).Headers,
		basic.AuthMiddleware,
		casbin.NewEnforcer,
		jwt.NewSigner,
		jwt.MapClaimsFactory,
		jwt.StandardClaimsFactory,
		jwt.NewParser,
		jwt.HTTPToContext,
		jwt.ContextToHTTP,
		jwt.GRPCToContext,
		jwt.ContextToGRPC,
		circuitbreaker.Gobreaker,
		circuitbreaker.HandyBreaker,
		circuitbreaker.Hystrix,
		endpoint.Nop,
		endpoint.Chain,
		levels.New,
		(levels.Levels).With,
		(levels.Levels).Debug,
		(levels.Levels).Info,
		(levels.Levels).Warn,
		(levels.Levels).Error,
		(levels.Levels).Crit,
		levels.Key,
		levels.DebugValue,
		levels.InfoValue,
		levels.WarnValue,
		levels.ErrorValue,
		levels.CritValue,
		log.NewJSONLogger,
		level.Error,
		level.Warn,
		level.Info,
		level.Debug,
		level.NewFilter,
		level.AllowAll,
		level.AllowDebug,
		level.AllowInfo,
		level.AllowWarn,
		level.AllowError,
		level.AllowNone,
		level.ErrNotAllowed,
		level.SquelchNoLevel,
		level.ErrNoLevel,
		level.NewInjector,
		level.Key,
		level.ErrorValue,
		level.WarnValue,
		level.InfoValue,
		level.DebugValue,
		log.With,
		log.WithPrefix,
		log.WithSuffix,
		log.NewLogfmtLogger,
		logrus.NewLogger,
		logrus.WithLevel,
		(logrus.Logger).Log,
		log.NewNopLogger,
		log.TimestampKey,
		log.FileKey,
		log.MessageKey,
		log.Prefix,
		log.NewStdlibAdapter,
		log.NewSyncWriter,
		log.NewSyncLogger,
		syslog.NewSyslogLogger,
		syslog.PrioritySelectorOption,
		term.NewColorLogger,
		term.NewColorWriter,
		term.NewLogger,
		term.IsTerminal,
		log.Timestamp,
		log.TimestampFormat,
		log.Caller,
		zap.NewZapSugarLogger,
		cloudwatch.WithLogger,
		cloudwatch.WithPercentiles,
		cloudwatch.WithConcurrentRequests,
		cloudwatch.New,
		(*cloudwatch.CloudWatch).NewCounter,
		(*cloudwatch.CloudWatch).NewGauge,
		(*cloudwatch.CloudWatch).NewHistogram,
		(*cloudwatch.CloudWatch).WriteLoop,
		(*cloudwatch.CloudWatch).Send,
		(*cloudwatch.Counter).With,
		(*cloudwatch.Counter).Add,
		(*cloudwatch.Gauge).With,
		(*cloudwatch.Gauge).Set,
		(*cloudwatch.Gauge).Add,
		(*cloudwatch.Histogram).With,
		(*cloudwatch.Histogram).Observe,
		cloudwatch2.WithLogger,
		cloudwatch2.WithConcurrentRequests,
		cloudwatch2.New,
		(*cloudwatch2.CloudWatch).NewCounter,
		(*cloudwatch2.CloudWatch).NewGauge,
		(*cloudwatch2.CloudWatch).NewHistogram,
		(*cloudwatch2.CloudWatch).WriteLoop,
		(*cloudwatch2.CloudWatch).Send,
		(*cloudwatch2.Counter).With,
		(*cloudwatch2.Counter).Add,
		discard.NewCounter,
		discard.NewGauge,
		discard.NewHistogram,
		dogstatsd.New,
		(*dogstatsd.Dogstatsd).NewCounter,
		(*dogstatsd.Dogstatsd).NewGauge,
		(*dogstatsd.Dogstatsd).NewTiming,
		(*dogstatsd.Dogstatsd).NewHistogram,
		(*dogstatsd.Dogstatsd).WriteLoop,
		(*dogstatsd.Dogstatsd).SendLoop,
		(*dogstatsd.Dogstatsd).WriteTo,
		(*dogstatsd.Counter).With,
		(*dogstatsd.Counter).Add,
		(*dogstatsd.Gauge).With,
		(*dogstatsd.Gauge).Set,
		(*dogstatsd.Gauge).Add,
		(*dogstatsd.Timing).With,
		(*dogstatsd.Timing).Observe,
		(*dogstatsd.Histogram).With,
		(*dogstatsd.Histogram).Observe,
		expvar.NewCounter,
		(*expvar.Counter).With,
		(*expvar.Counter).Add,
		expvar.NewGauge,
		(*expvar.Gauge).With,
		(*expvar.Gauge).Set,
		(*expvar.Gauge).Add,
		expvar.NewHistogram,
		(*expvar.Histogram).With,
		(*expvar.Histogram).Observe,
		generic.NewCounter,
		(*generic.Counter).With,
		(*generic.Counter).Add,
		(*generic.Counter).Value,
		(*generic.Counter).ValueReset,
		(*generic.Counter).LabelValues,
		generic.NewGauge,
		(*generic.Gauge).With,
		(*generic.Gauge).Set,
		(*generic.Gauge).Add,
		(*generic.Gauge).Value,
		(*generic.Gauge).LabelValues,
		generic.NewHistogram,
		(*generic.Histogram).With,
		(*generic.Histogram).Observe,
		(*generic.Histogram).Quantile,
		(*generic.Histogram).LabelValues,
		(*generic.Histogram).Print,
		generic.NewSimpleHistogram,
		(*generic.SimpleHistogram).With,
		(*generic.SimpleHistogram).Observe,
		(*generic.SimpleHistogram).ApproximateMovingAverage,
		(*generic.SimpleHistogram).LabelValues,
		graphite.New,
		(*graphite.Graphite).NewCounter,
		(*graphite.Graphite).NewGauge,
		(*graphite.Graphite).NewHistogram,
		(*graphite.Graphite).WriteLoop,
		(*graphite.Graphite).SendLoop,
		(*graphite.Graphite).WriteTo,
		graphite.NewCounter,
		(*graphite.Counter).With,
		(*graphite.Counter).Add,
		graphite.NewGauge,
		(*graphite.Gauge).With,
		(*graphite.Gauge).Set,
		(*graphite.Gauge).Add,
		graphite.NewHistogram,
		(*graphite.Histogram).With,
		(*graphite.Histogram).Observe,
		influx.New,
		(*influx.Influx).NewCounter,
		(*influx.Influx).NewGauge,
		(*influx.Influx).NewHistogram,
		(*influx.Influx).WriteLoop,
		(*influx.Influx).WriteTo,
		(*influx.Counter).With,
		(*influx.Counter).Add,
		(*influx.Gauge).With,
		(*influx.Gauge).Set,
		(*influx.Gauge).Add,
		(*influx.Histogram).With,
		(*influx.Histogram).Observe,
		influxstatsd.New,
		(*influxstatsd.Influxstatsd).NewCounter,
		(*influxstatsd.Influxstatsd).NewGauge,
		(*influxstatsd.Influxstatsd).NewTiming,
		(*influxstatsd.Influxstatsd).NewHistogram,
		(*influxstatsd.Influxstatsd).WriteLoop,
		(*influxstatsd.Influxstatsd).SendLoop,
		(*influxstatsd.Influxstatsd).WriteTo,
		(*influxstatsd.Counter).With,
		(*influxstatsd.Counter).Add,
		(*influxstatsd.Gauge).With,
		(*influxstatsd.Gauge).Set,
		(*influxstatsd.Gauge).Add,
		(*influxstatsd.Timing).With,
		(*influxstatsd.Timing).Observe,
		(*influxstatsd.Histogram).With,
		(*influxstatsd.Histogram).Observe,
		multi.NewCounter,
		(multi.Counter).Add,
		(multi.Counter).With,
		multi.NewGauge,
		(multi.Gauge).Set,
		(multi.Gauge).With,
		(multi.Gauge).Add,
		multi.NewHistogram,
		(multi.Histogram).Observe,
		(multi.Histogram).With,
		pcp.NewReporter,
		(*pcp.Reporter).Start,
		(*pcp.Reporter).Stop,
		(*pcp.Reporter).NewCounter,
		(*pcp.Counter).With,
		(*pcp.Counter).Add,
		(*pcp.Reporter).NewGauge,
		(*pcp.Gauge).With,
		(*pcp.Gauge).Set,
		(*pcp.Gauge).Add,
		(*pcp.Reporter).NewHistogram,
		(*pcp.Histogram).With,
		(*pcp.Histogram).Observe,
		(*pcp.Histogram).Mean,
		(*pcp.Histogram).Percentile,
		prometheus.NewCounterFrom,
		prometheus.NewCounter,
		(*prometheus.Counter).With,
		(*prometheus.Counter).Add,
		prometheus.NewGaugeFrom,
		prometheus.NewGauge,
		(*prometheus.Gauge).With,
		(*prometheus.Gauge).Set,
		(*prometheus.Gauge).Add,
		prometheus.NewSummaryFrom,
		prometheus.NewSummary,
		(*prometheus.Summary).With,
		(*prometheus.Summary).Observe,
		prometheus.NewHistogramFrom,
		prometheus.NewHistogram,
		(*prometheus.Histogram).With,
		(*prometheus.Histogram).Observe,
		provider.NewDiscardProvider,
		provider.NewDogstatsdProvider,
		provider.NewExpvarProvider,
		provider.NewGraphiteProvider,
		provider.NewInfluxProvider,
		provider.NewPrometheusProvider,
		provider.NewStatsdProvider,
		statsd.New,
		(*statsd.Statsd).NewCounter,
		(*statsd.Statsd).NewGauge,
		(*statsd.Statsd).NewTiming,
		(*statsd.Statsd).WriteLoop,
		(*statsd.Statsd).SendLoop,
		(*statsd.Statsd).WriteTo,
		(*statsd.Counter).With,
		(*statsd.Counter).Add,
		(*statsd.Gauge).With,
		(*statsd.Gauge).Set,
		(*statsd.Gauge).Add,
		(*statsd.Timing).With,
		(*statsd.Timing).Observe,
		teststat.SumLines,
		teststat.LastLine,
		teststat.Quantiles,
		teststat.PopulateNormalHistogram,
		teststat.FillCounter,
		teststat.ExpectedObservationsLessThan,
		metrics.NewTimer,
		(*metrics.Timer).ObserveDuration,
		(*metrics.Timer).Unit,
		ratelimit.NewErroringLimiter,
		ratelimit.NewDelayingLimiter,
		(ratelimit.AllowerFunc).Allow,
		(ratelimit.WaiterFunc).Wait,
		consul.NewClient,
		consul.NewInstancer,
		(*consul.Instancer).Stop,
		(*consul.Instancer).Register,
		(*consul.Instancer).Deregister,
		consul.NewRegistrar,
		(*consul.Registrar).Register,
		(*consul.Registrar).Deregister,
		dnssrv.NewInstancer,
		dnssrv.NewInstancerDetailed,
		(*dnssrv.Instancer).Stop,
		(*dnssrv.Instancer).Register,
		(*dnssrv.Instancer).Deregister,
		(sd.FixedEndpointer).Endpoints,
		sd.NewEndpointer,
		sd.InvalidateOnError,
		(*sd.DefaultEndpointer).Close,
		(*sd.DefaultEndpointer).Endpoints,
		etcd.NewClient,
		etcd.NewInstancer,
		(*etcd.Instancer).Stop,
		(*etcd.Instancer).Register,
		(*etcd.Instancer).Deregister,
		etcd.NewTTLOption,
		etcd.NewRegistrar,
		(*etcd.Registrar).Register,
		(*etcd.Registrar).Deregister,
		etcdv3.NewClient,
		etcdv3.NewInstancer,
		(*etcdv3.Instancer).Stop,
		(*etcdv3.Instancer).Register,
		(*etcdv3.Instancer).Deregister,
		etcdv3.NewTTLOption,
		etcdv3.NewRegistrar,
		(*etcdv3.Registrar).Register,
		(*etcdv3.Registrar).Deregister,
		eureka.NewInstancer,
		(*eureka.Instancer).Stop,
		(*eureka.Instancer).Register,
		(*eureka.Instancer).Deregister,
		eureka.NewRegistrar,
		(*eureka.Registrar).Register,
		(*eureka.Registrar).Deregister,
		(sd.FixedInstancer).Register,
		(sd.FixedInstancer).Deregister,
		(sd.FixedInstancer).Stop,
		lb.NewRandom,
		(lb.RetryError).Error,
		lb.Retry,
		lb.RetryWithCallback,
		lb.NewRoundRobin,
		zk.ACL,
		zk.Credentials,
		zk.ConnectTimeout,
		zk.SessionTimeout,
		zk.Payload,
		zk.EventHandler,
		zk.NewClient,
		zk.NewInstancer,
		(*zk.Instancer).Stop,
		(*zk.Instancer).Register,
		(*zk.Instancer).Deregister,
		zk.NewRegistrar,
		(*zk.Registrar).Register,
		(*zk.Registrar).Deregister,
		opencensus.TraceEndpoint,
		opencensus.WithEndpointConfig,
		opencensus.WithEndpointAttributes,
		opencensus.WithIgnoreBusinessError,
		opencensus.WithSpanName,
		opencensus.WithSpanAttributes,
		opencensus.GRPCClientTrace,
		opencensus.GRPCServerTrace,
		opencensus.HTTPClientTrace,
		opencensus.HTTPServerTrace,
		opencensus.JSONRPCClientTrace,
		opencensus.JSONRPCServerTrace,
		opencensus.WithTracerConfig,
		opencensus.WithSampler,
		opencensus.WithName,
		opencensus.IsPublic,
		opencensus.WithHTTPPropagation,
		opentracing.TraceEndpoint,
		opentracing.TraceServer,
		opentracing.TraceClient,
		opentracing.WithOptions,
		opentracing.WithIgnoreBusinessError,
		opentracing.WithOperationNameFunc,
		opentracing.WithTags,
		opentracing.WithTagsFunc,
		opentracing.ContextToGRPC,
		opentracing.GRPCToContext,
		opentracing.ContextToHTTP,
		opentracing.HTTPToContext,
		zipkin.TraceEndpoint,
		zipkin.GRPCClientTrace,
		zipkin.GRPCServerTrace,
		zipkin.HTTPClientTrace,
		zipkin.HTTPServerTrace,
		zipkin.Name,
		zipkin.Tags,
		zipkin.Logger,
		zipkin.AllowPropagation,
		zipkin.RequestSampler,
		amqp.NewPublisher,
		amqp.PublisherBefore,
		amqp.PublisherAfter,
		amqp.PublisherDeliverer,
		amqp.PublisherTimeout,
		(amqp.Publisher).Endpoint,
		amqp.DefaultDeliverer,
		amqp.SendAndForgetDeliverer,
		amqp.SetPublishExchange,
		amqp.SetPublishKey,
		amqp.SetPublishDeliveryMode,
		amqp.SetNackSleepDuration,
		amqp.SetConsumeAutoAck,
		amqp.SetConsumeArgs,
		amqp.SetContentType,
		amqp.SetContentEncoding,
		amqp.SetCorrelationID,
		amqp.SetAckAfterEndpoint,
		amqp.NewSubscriber,
		amqp.SubscriberBefore,
		amqp.SubscriberAfter,
		amqp.SubscriberResponsePublisher,
		amqp.SubscriberErrorEncoder,
		amqp.SubscriberErrorLogger,
		amqp.SubscriberErrorHandler,
		(amqp.Subscriber).ServeDelivery,
		amqp.EncodeJSONResponse,
		amqp.EncodeNopResponse,
		amqp.DefaultResponsePublisher,
		amqp.NopResponsePublisher,
		amqp.DefaultErrorEncoder,
		amqp.SingleNackRequeueErrorEncoder,
		amqp.ReplyErrorEncoder,
		amqp.ReplyAndAckErrorEncoder,
		awslambda.NewHandler,
		awslambda.HandlerBefore,
		awslambda.HandlerAfter,
		awslambda.HandlerErrorLogger,
		awslambda.HandlerErrorHandler,
		awslambda.HandlerErrorEncoder,
		awslambda.HandlerFinalizer,
		awslambda.DefaultErrorEncoder,
		(*awslambda.Handler).Invoke,
		transport.NewLogErrorHandler,
		(*transport.LogErrorHandler).Handle,
		(transport.ErrorHandlerFunc).Handle,
		test.NewClient,
		test.SetCorrelationID,
		test.GetConsumedCorrelationID,
		(*pb.TestRequest).Reset,
		(*pb.TestRequest).String,
		(*pb.TestRequest).ProtoMessage,
		(*pb.TestRequest).ProtoReflect,
		(*pb.TestRequest).Descriptor,
		(*pb.TestRequest).GetA,
		(*pb.TestRequest).GetB,
		(*pb.TestResponse).Reset,
		(*pb.TestResponse).String,
		(*pb.TestResponse).ProtoMessage,
		(*pb.TestResponse).ProtoReflect,
		(*pb.TestResponse).Descriptor,
		(*pb.TestResponse).GetV,
		pb.NewTestClient,
		pb.RegisterTestServer,
		test.NewService,
		test.NewBinding,
		grpc.NewClient,
		grpc.ClientBefore,
		grpc.ClientAfter,
		grpc.ClientFinalizer,
		(grpc.Client).Endpoint,
		grpc.SetRequestHeader,
		grpc.SetResponseHeader,
		grpc.SetResponseTrailer,
		grpc.EncodeKeyValue,
		grpc.NewServer,
		grpc.ServerBefore,
		grpc.ServerAfter,
		grpc.ServerErrorLogger,
		grpc.ServerErrorHandler,
		grpc.ServerFinalizer,
		(grpc.Server).ServeGRPC,
		grpc.Interceptor,
		http.NewClient,
		http.NewExplicitClient,
		http.SetClient,
		http.ClientBefore,
		http.ClientAfter,
		http.ClientFinalizer,
		http.BufferedStream,
		(http.Client).Endpoint,
		http.EncodeJSONRequest,
		http.EncodeXMLRequest,
		jsonrpc.NewClient,
		jsonrpc.DefaultRequestEncoder,
		jsonrpc.DefaultResponseDecoder,
		jsonrpc.SetClient,
		jsonrpc.ClientBefore,
		jsonrpc.ClientAfter,
		jsonrpc.ClientFinalizer,
		jsonrpc.ClientRequestEncoder,
		jsonrpc.ClientResponseDecoder,
		jsonrpc.ClientRequestIDGenerator,
		jsonrpc.BufferedStream,
		(jsonrpc.Client).Endpoint,
		jsonrpc.NewAutoIncrementID,
		(jsonrpc.Error).Error,
		(jsonrpc.Error).ErrorCode,
		jsonrpc.ErrorMessage,
		(*jsonrpc.RequestID).UnmarshalJSON,
		(*jsonrpc.RequestID).MarshalJSON,
		(*jsonrpc.RequestID).Int,
		(*jsonrpc.RequestID).Float32,
		(*jsonrpc.RequestID).String,
		jsonrpc.NewServer,
		jsonrpc.ServerBefore,
		jsonrpc.ServerBeforeCodec,
		jsonrpc.ServerAfter,
		jsonrpc.ServerErrorEncoder,
		jsonrpc.ServerErrorLogger,
		jsonrpc.ServerFinalizer,
		(jsonrpc.Server).ServeHTTP,
		jsonrpc.DefaultErrorEncoder,
		proto.EncodeProtoRequest,
		proto.EncodeProtoResponse,
		http.SetContentType,
		http.SetResponseHeader,
		http.SetRequestHeader,
		http.PopulateRequestContext,
		http.NewServer,
		http.ServerBefore,
		http.ServerAfter,
		http.ServerErrorEncoder,
		http.ServerErrorLogger,
		http.ServerErrorHandler,
		http.ServerFinalizer,
		(http.Server).ServeHTTP,
		http.NopRequestDecoder,
		http.EncodeJSONResponse,
		http.DefaultErrorEncoder,
		httprp.NewServer,
		httprp.ServerBefore,
		(httprp.Server).ServeHTTP,
		nats.NewPublisher,
		nats.PublisherBefore,
		nats.PublisherAfter,
		nats.PublisherTimeout,
		(nats.Publisher).Endpoint,
		nats.EncodeJSONRequest,
		nats.NewSubscriber,
		nats.SubscriberBefore,
		nats.SubscriberAfter,
		nats.SubscriberErrorEncoder,
		nats.SubscriberErrorLogger,
		nats.SubscriberErrorHandler,
		nats.SubscriberFinalizer,
		(nats.Subscriber).ServeMsg,
		nats.NopRequestDecoder,
		nats.EncodeJSONResponse,
		nats.DefaultErrorEncoder,
		conn.NewManager,
		conn.NewDefaultManager,
		(*conn.Manager).Take,
		(*conn.Manager).Put,
		(*conn.Manager).Write,
		conn.Exponential,
		
	}

	executor.ExecuteFuncs(funcs, nil, "feedback_directed", 0, 60 * 5, 10, executor.DebugOpts{Dump: true, Debug: false, UseSequenceHashMap: true, Iteration: iteration})
}